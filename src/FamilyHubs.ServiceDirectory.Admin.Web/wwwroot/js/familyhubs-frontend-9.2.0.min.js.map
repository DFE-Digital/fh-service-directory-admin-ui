{"version":3,"sources":["tmp/js/components/cookie-functions.js","tmp/js/components/helpers.js","tmp/js/components/postcode.js","tmp/js/components/analytics.js","tmp/js/components/cookie-banner.js","tmp/js/components/cookies-page.js","tmp/js/components/clarity.js","tmp/js/components/add-another.js","tmp/js/components/autocomplete.js","tmp/js/components/back-links.js","tmp/js/components/visibility-toggle.js","tmp/js/components/open-close-button.js","tmp/js/familyhubs.js"],"names":["COOKIE_CATEGORIES","analytics","window","GA_CONTAINER_ID","essential","GA_COOKIE_NAME","DEFAULT_COOKIE_CONSENT","version","GDS_CONSENT_COOKIE_VERSION","getConsentCookie","consentCookie","getCookie","consentCookieObj","JSON","parse","err","isValidConsentCookie","options","setConsentCookie","cookieConsent","option","stringify","setCookie","days","resetCookies","cookieType","forEach","cookie","deleteCookie","userAllowsCookieCategory","cookieCategory","cookiePreferences","e","console","error","userAllowsCookie","cookieName","category","indexOf","name","nameEQ","cookies","document","split","i","len","length","charAt","substring","decodeURIComponent","value","cookieString","date","Date","setTime","getTime","toUTCString","location","protocol","hostname","nodeListForEach","nodes","callback","NodeList","prototype","call","INCODE_REGEX","POSTCODE_REGEX","SPACE_REGEX","sanitize","s","replace","toUpperCase","isValid","postcode","match","toOutcode","gtag","command","args","dataLayer","push","arguments","GaMeasurementId","initAnalytics","gaMeasurementId","Boolean","setDefaultConsent","loadGaScript","pageViewParams","getPiiSafePageView","send_page_view","page_path","page_location","page_referrer","referrer","cookie_flags","userConsent","updateAnalyticsStorageConsent","sendPageViewEvent","sendFilterPageCustomEvent","analytics_storage","granted","delayMs","element","getElementById","totalResults","getAttribute","undefined","total_results","sendAnalyticsCustomEvent","accepted","source","f","getElementsByTagName","j","createElement","async","src","parentNode","insertBefore","pageView","page_title","title","send_to","piiSafeReferrerQueryString","getPiiSafeQueryString","URL","search","urlArray","piiSafeQueryString","href","pathname","queryString","queryParams","URLSearchParams","get","set","delete","toString","cookieBannerAcceptSelector","cookieBannerRejectSelector","cookieBannerHideButtonSelector","cookieMessageSelector","cookieConfirmationAcceptSelector","cookieConfirmationRejectSelector","CookieBanner","$module","this","CookiesPage","initClarity","clarityId","clarity","q","loadClarityScript","initializeAddAnother","querySelectorAll","$addAnother","FamilyHubsFrontend","AddAnother","initializeAutocompletes","autocomplete","accessibleAutocomplete","enhanceSelectElement","selectElement","initializeBackButtons","history","link","classList","add","initializeVisibilityToggles","toggle","addEventListener","event","toToggleId","toToggle","style","display","init","$cookieBanner","$acceptButton","querySelector","$rejectButton","$cookieMessage","$cookieConfirmationAccept","$cookieConfirmationReject","$cookieBannerHideButtons","onCookiesPage","currentConsentCookie","CookieFunctions.getConsentCookie","CookieFunctions.isValidConsentCookie","CookieFunctions.resetCookies","removeAttribute","acceptCookies","bind","rejectCookies","$cookieBannerHideButton","hideBanner","setAttribute","CookieFunctions.setConsentCookie","revealConfirmationMessage","confirmationMessage","focus","$cookiePage","$cookieForm","$cookieFormFieldsets","$successNotification","$successLink","$cookieFormFieldset","showUserPreference","savePreferences","preventDefault","preferences","getCookieType","selectedItem","analyticsAccepted","showSuccessNotification","preference","radioValue","checked","scrollTo","id","container","$","index","data","functionName","on","proxy","find","prop","onAddButtonClick","item","getNewItem","firstItem","getItems","first","hasRemoveButton","createRemoveButton","last","after","stripErrorFromNewItem","el","remove","removeChild","cloneNode","wrapper","$item","updateAttributes","resetItem","each","originalId","attr","siblings","parents","htmlFor","append","type","onRemoveButtonClick","currentTarget","items","focusHeading","OpenCloseButton","constructor","openCloseButton","targetId","target","showText","textContent","hideText","hideTarget","showTarget","handleClick","contains","initAll","GA_MEASUREMENT_ID","CLARITY_ID","openCloseButtons","GOVUKFrontend","MOJFrontend"],"mappings":"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","file":"familyhubs-frontend-9.2.0.min.js","sourcesContent":["/* Users can (dis)allow different groups of cookies. */\nconst COOKIE_CATEGORIES = {\n    analytics: ['_ga', '_ga_' + window.GA_CONTAINER_ID],\n    /* Essential cookies\n     *\n     * Essential cookies cannot be deselected, but we want our cookie code to\n     * only allow adding cookies that are documented in this object, so they need\n     * to be added here.\n     */\n    essential: [window.GA_COOKIE_NAME]\n};\n/*\n * Default cookie preferences if user has no cookie preferences.\n *\n * Note that this doesn't include a key for essential cookies, essential\n * cookies cannot be disallowed. If the object contains { essential: false }\n * this will be ignored.\n */\nconst DEFAULT_COOKIE_CONSENT = {\n    analytics: false,\n    version: window.GDS_CONSENT_COOKIE_VERSION\n};\n/** Return the user's cookie preferences.\n *\n * If the consent cookie is malformed, or not present,\n * returns null.\n */\nexport function getConsentCookie() {\n    const consentCookie = getCookie(window.GA_COOKIE_NAME);\n    let consentCookieObj;\n    if (consentCookie) {\n        try {\n            consentCookieObj = JSON.parse(consentCookie);\n        }\n        catch (err) {\n            return null;\n        }\n    }\n    else {\n        return null;\n    }\n    return consentCookieObj;\n}\n/** Check the cookie preferences object.\n *\n * If the consent object is not present, malformed, or incorrect version,\n * returns false, otherwise returns true.\n */\nexport function isValidConsentCookie(options) {\n    return (options && options.version >= window.GDS_CONSENT_COOKIE_VERSION);\n}\n/** Update the user's cookie preferences. */\nexport function setConsentCookie(options) {\n    let cookieConsent = getConsentCookie();\n    if (!cookieConsent) {\n        cookieConsent = JSON.parse(JSON.stringify(DEFAULT_COOKIE_CONSENT));\n    }\n    // Merge current cookie preferences and new preferences\n    for (var option in options) {\n        cookieConsent[option] = options[option];\n    }\n    // Essential cookies cannot be deselected, ignore this cookie type\n    delete cookieConsent.essential;\n    cookieConsent.version = window.GDS_CONSENT_COOKIE_VERSION;\n    // Set the consent cookie\n    setCookie(window.GA_COOKIE_NAME, JSON.stringify(cookieConsent), { days: 365 });\n    // Update the other cookies\n    resetCookies();\n}\n/** Apply the user's cookie preferences\n *\n * Deletes any cookies the user has not consented to.\n */\nexport function resetCookies() {\n    var options = getConsentCookie();\n    // If no preferences or old version use the default\n    if (!isValidConsentCookie(options)) {\n        options = JSON.parse(JSON.stringify(DEFAULT_COOKIE_CONSENT));\n    }\n    for (var cookieType in options) {\n        if (cookieType === 'version') {\n            continue;\n        }\n        // Essential cookies cannot be deselected, ignore this cookie type\n        if (cookieType === 'essential') {\n            continue;\n        }\n        if (!options[cookieType]) {\n            // Fetch the cookies in that category\n            var cookiesInCategory = COOKIE_CATEGORIES[cookieType];\n            cookiesInCategory.forEach(function (cookie) {\n                deleteCookie(cookie);\n            });\n        }\n    }\n}\nfunction userAllowsCookieCategory(cookieCategory, cookiePreferences) {\n    // Essential cookies are always allowed\n    if (cookieCategory === 'essential') {\n        return true;\n    }\n    // Sometimes cookiePreferences is malformed in some of the tests, so we need to handle these\n    try {\n        return cookiePreferences[cookieCategory];\n    }\n    catch (e) {\n        console.error(e);\n        return false;\n    }\n}\nfunction userAllowsCookie(cookieName) {\n    // Always allow setting the consent cookie\n    if (cookieName === window.GA_COOKIE_NAME) {\n        return true;\n    }\n    // Get the current cookie preferences\n    var cookiePreferences = getConsentCookie();\n    // If no preferences or old version use the default\n    if (!isValidConsentCookie(cookiePreferences)) {\n        cookiePreferences = DEFAULT_COOKIE_CONSENT;\n    }\n    for (var category in COOKIE_CATEGORIES) {\n        var cookiesInCategory = COOKIE_CATEGORIES[category];\n        if (cookiesInCategory.indexOf(cookieName) !== '-1') {\n            return userAllowsCookieCategory(category, cookiePreferences);\n        }\n    }\n    // Deny the cookie if it is not known to us\n    return false;\n}\nfunction getCookie(name) {\n    var nameEQ = name + '=';\n    var cookies = document.cookie.split(';');\n    for (var i = 0, len = cookies.length; i < len; i++) {\n        var cookie = cookies[i];\n        while (cookie.charAt(0) === ' ') {\n            cookie = cookie.substring(1, cookie.length);\n        }\n        if (cookie.indexOf(nameEQ) === 0) {\n            return decodeURIComponent(cookie.substring(nameEQ.length));\n        }\n    }\n    return null;\n}\n// do we need to set the domain?\nfunction setCookie(name, value, options) {\n    if (userAllowsCookie(name)) {\n        if (typeof options === 'undefined') {\n            options = {};\n        }\n        var cookieString = name + '=' + value + '; path=/; SameSite=Strict';\n        if (options.days) {\n            var date = new Date();\n            date.setTime(date.getTime() + (options.days * 24 * 60 * 60 * 1000));\n            cookieString = cookieString + '; expires=' + date.toUTCString();\n        }\n        if (document.location.protocol === 'https:') {\n            cookieString = cookieString + '; Secure';\n        }\n        document.cookie = cookieString;\n    }\n}\nfunction deleteCookie(name) {\n    if (getCookie(name)) {\n        // Cookies need to be deleted in the same level of specificity in which they were set\n        // If a cookie was set with a specified domain, it needs to be specified when deleted\n        // If a cookie wasn't set with the domain attribute, it shouldn't be there when deleted\n        // You can't tell if a cookie was set with a domain attribute or not, so try both options\n        document.cookie = name + '=;expires=Thu, 01 Jan 1970 00:00:00 GMT;path=/';\n        document.cookie = name + '=;expires=Thu, 01 Jan 1970 00:00:00 GMT;domain=' + window.location.hostname + ';path=/';\n        document.cookie = name + '=;expires=Thu, 01 Jan 1970 00:00:00 GMT;domain=.' + window.location.hostname + ';path=/';\n    }\n}\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","/*todo: remove this and use NodeList.prototype.forEach instead, as govuk has for v5 */\n/* https://github.com/alphagov/govuk-frontend/issues/3466 */\n/* https://github.com/alphagov/govuk-frontend/pull/3570/files */\nexport function nodeListForEach(nodes, callback) {\n    if (window.NodeList.prototype.forEach) {\n        return nodes.forEach(callback);\n    }\n    for (var i = 0; i < nodes.length; i++) {\n        callback.call(window, nodes[i], i, nodes);\n    }\n}\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvaGVscGVycy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxzRkFBc0Y7QUFDdEYsNERBQTREO0FBQzVELGdFQUFnRTtBQUVoRSxNQUFNLFVBQVUsZUFBZSxDQUMzQixLQUEwQixFQUMxQixRQUE0RTtJQUU1RSxJQUFJLE1BQU0sQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQ3BDLE9BQU8sS0FBSyxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNuQyxDQUFDO0lBQ0QsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEtBQUssQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQztRQUNwQyxRQUFRLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQzlDLENBQUM7QUFDTCxDQUFDIiwiZmlsZSI6ImNvbXBvbmVudHMvaGVscGVycy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qdG9kbzogcmVtb3ZlIHRoaXMgYW5kIHVzZSBOb2RlTGlzdC5wcm90b3R5cGUuZm9yRWFjaCBpbnN0ZWFkLCBhcyBnb3Z1ayBoYXMgZm9yIHY1ICovXHJcbi8qIGh0dHBzOi8vZ2l0aHViLmNvbS9hbHBoYWdvdi9nb3Z1ay1mcm9udGVuZC9pc3N1ZXMvMzQ2NiAqL1xyXG4vKiBodHRwczovL2dpdGh1Yi5jb20vYWxwaGFnb3YvZ292dWstZnJvbnRlbmQvcHVsbC8zNTcwL2ZpbGVzICovXHJcblxyXG5leHBvcnQgZnVuY3Rpb24gbm9kZUxpc3RGb3JFYWNoKFxyXG4gICAgbm9kZXM6IE5vZGVMaXN0T2Y8RWxlbWVudD4sXHJcbiAgICBjYWxsYmFjazogKG5vZGU6IEVsZW1lbnQsIGluZGV4OiBudW1iZXIsIG5vZGVzOiBOb2RlTGlzdE9mPEVsZW1lbnQ+KSA9PiB2b2lkXHJcbik6IHZvaWQge1xyXG4gICAgaWYgKHdpbmRvdy5Ob2RlTGlzdC5wcm90b3R5cGUuZm9yRWFjaCkge1xyXG4gICAgICAgIHJldHVybiBub2Rlcy5mb3JFYWNoKGNhbGxiYWNrKTtcclxuICAgIH1cclxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbm9kZXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICBjYWxsYmFjay5jYWxsKHdpbmRvdywgbm9kZXNbaV0sIGksIG5vZGVzKTtcclxuICAgIH1cclxufVxyXG4iXX0=\n","// from https://github.com/ideal-postcodes/postcode\n/**\n * @hidden\n */\nexport const DISTRICT_SPLIT_REGEX = /^([a-z]{1,2}\\d)([a-z])$/i;\n/**\n * Tests for the unit section of a postcode\n */\nexport const UNIT_REGEX = /[a-z]{2}$/i;\n/**\n * Tests for the inward code section of a postcode\n */\nexport const INCODE_REGEX = /\\d[a-z]{2}$/i;\n/**\n * Tests for the outward code section of a postcode\n */\nexport const OUTCODE_REGEX = /^[a-z]{1,2}\\d[a-z\\d]?$/i;\n/**\n * Tests for a valid postcode\n */\nexport const POSTCODE_REGEX = /^[a-z]{1,2}\\d[a-z\\d]?\\s*\\d[a-z]{2}$/i;\n/**\n * Test for a valid postcode embedded in text\n */\nexport const POSTCODE_CORPUS_REGEX = /[a-z]{1,2}\\d[a-z\\d]?\\s*\\d[a-z]{2}/gi;\n/**\n * Tests for the area section of a postcode\n */\nexport const AREA_REGEX = /^[a-z]{1,2}/i;\n/**\n * Invalid postcode prototype\n * @hidden\n */\nconst invalidPostcode = {\n    valid: false,\n    postcode: null,\n    incode: null,\n    outcode: null,\n    area: null,\n    district: null,\n    subDistrict: null,\n    sector: null,\n    unit: null,\n};\n/**\n * Return first elem of input is RegExpMatchArray or null if input null\n * @hidden\n */\nconst firstOrNull = (match) => {\n    if (match === null)\n        return null;\n    return match[0];\n};\nconst SPACE_REGEX = /\\s+/gi;\n/**\n * Drop all spaces and uppercase\n * @hidden\n */\nconst sanitize = (s) => s.replace(SPACE_REGEX, \"\").toUpperCase();\n/**\n * Sanitizes string and returns regex matches\n * @hidden\n */\nconst matchOn = (s, regex) => sanitize(s).match(regex);\n/**\n * Detects a \"valid\" postcode\n * - Starts and ends on a non-space character\n * - Any length of intervening space is allowed\n * - Must conform to one of following schemas:\n *  - AA1A 1AA\n *  - A1A 1AA\n *  - A1 1AA\n *  - A99 9AA\n *  - AA9 9AA\n *  - AA99 9AA\n */\nexport const isValid = (postcode) => postcode.match(POSTCODE_REGEX) !== null;\n/**\n * Returns true if string is a valid outcode\n */\nexport const validOutcode = (outcode) => outcode.match(OUTCODE_REGEX) !== null;\n/**\n * Returns a normalised postcode string (i.e. uppercased and properly spaced)\n *\n * Returns null if invalid postcode\n */\nexport const toNormalised = (postcode) => {\n    const outcode = toOutcode(postcode);\n    if (outcode === null)\n        return null;\n    const incode = toIncode(postcode);\n    if (incode === null)\n        return null;\n    return `${outcode} ${incode}`;\n};\n/**\n * Returns a correctly formatted outcode given a postcode\n *\n * Returns null if invalid postcode\n */\nexport const toOutcode = (postcode) => {\n    if (!isValid(postcode))\n        return null;\n    return sanitize(postcode).replace(INCODE_REGEX, \"\");\n};\n/**\n * Returns a correctly formatted incode given a postcode\n *\n * Returns null if invalid postcode\n */\nexport const toIncode = (postcode) => {\n    if (!isValid(postcode))\n        return null;\n    const match = matchOn(postcode, INCODE_REGEX);\n    return firstOrNull(match);\n};\n/**\n * Returns a correctly formatted area given a postcode\n *\n * Returns null if invalid postcode\n */\nexport const toArea = (postcode) => {\n    if (!isValid(postcode))\n        return null;\n    const match = matchOn(postcode, AREA_REGEX);\n    return firstOrNull(match);\n};\n/**\n * Returns a correctly formatted sector given a postcode\n *\n * Returns null if invalid postcode\n */\nexport const toSector = (postcode) => {\n    const outcode = toOutcode(postcode);\n    if (outcode === null)\n        return null;\n    const incode = toIncode(postcode);\n    if (incode === null)\n        return null;\n    return `${outcode} ${incode[0]}`;\n};\n/**\n * Returns a correctly formatted unit given a postcode\n *\n * Returns null if invalid postcode\n */\nexport const toUnit = (postcode) => {\n    if (!isValid(postcode))\n        return null;\n    const match = matchOn(postcode, UNIT_REGEX);\n    return firstOrNull(match);\n};\n/**\n * Returns a correctly formatted district given a postcode\n *\n * Returns null if invalid postcode\n *\n * @example\n *\n * ```\n * toDistrict(\"AA9 9AA\") // => \"AA9\"\n * toDistrict(\"A9A 9AA\") // => \"A9\"\n * ```\n */\nexport const toDistrict = (postcode) => {\n    const outcode = toOutcode(postcode);\n    if (outcode === null)\n        return null;\n    const match = outcode.match(DISTRICT_SPLIT_REGEX);\n    if (match === null)\n        return outcode;\n    return match[1];\n};\n/**\n * Returns a correctly formatted subdistrict given a postcode\n *\n * Returns null if no subdistrict is available on valid postcode\n * Returns null if invalid postcode\n *\n * @example\n *\n * ```\n * toSubDistrict(\"AA9A 9AA\") // => \"AA9A\"\n * toSubDistrict(\"A9A 9AA\") // => \"A9A\"\n * toSubDistrict(\"AA9 9AA\") // => null\n * toSubDistrict(\"A9 9AA\") // => null\n * ```\n */\nexport const toSubDistrict = (postcode) => {\n    const outcode = toOutcode(postcode);\n    if (outcode === null)\n        return null;\n    const split = outcode.match(DISTRICT_SPLIT_REGEX);\n    if (split === null)\n        return null;\n    return outcode;\n};\n/**\n * Returns a ValidPostcode or InvalidPostcode object from a postcode string\n *\n * @example\n *\n * ```\n * import { parse } from \"postcode\";\n *\n * const {\n * postcode,    // => \"SW1A 2AA\"\n * outcode,     // => \"SW1A\"\n * incode,      // => \"2AA\"\n * area,        // => \"SW\"\n * district,    // => \"SW1\"\n * unit,        // => \"AA\"\n * sector,      // => \"SW1A 2\"\n * subDistrict, // => \"SW1A\"\n * valid,       // => true\n * } = parse(\"Sw1A     2aa\");\n *\n * const {\n * postcode,    // => null\n * outcode,     // => null\n * incode,      // => null\n * area,        // => null\n * district,    // => null\n * unit,        // => null\n * sector,      // => null\n * subDistrict, // => null\n * valid,       // => false\n * } = parse(\"    Oh no, ):   \");\n * ```\n */\nexport const parse = (postcode) => {\n    if (!isValid(postcode))\n        return Object.assign({}, invalidPostcode);\n    return {\n        valid: true,\n        postcode: toNormalised(postcode),\n        incode: toIncode(postcode),\n        outcode: toOutcode(postcode),\n        area: toArea(postcode),\n        district: toDistrict(postcode),\n        subDistrict: toSubDistrict(postcode),\n        sector: toSector(postcode),\n        unit: toUnit(postcode),\n    };\n};\n/**\n * Searches a body of text for postcode matches\n *\n * Returns an empty array if no match\n *\n * @example\n *\n * ```\n * // Retrieve valid postcodes in a body of text\n * const matches = match(\"The PM and her no.2 live at SW1A2aa and SW1A 2AB\"); // => [\"SW1A2aa\", \"SW1A 2AB\"]\n *\n * // Perform transformations like normalisation postcodes using `.map` and `toNormalised`\n * matches.map(toNormalised); // => [\"SW1A 2AA\", \"SW1A 2AB\"]\n *\n * // No matches yields empty array\n * match(\"Some London outward codes are SW1A, NW1 and E1\"); // => []\n * ```\n */\nexport const match = (corpus) => corpus.match(POSTCODE_CORPUS_REGEX) || [];\n/**\n * Replaces postcodes in a body of text with a string\n *\n * By default the replacement string is empty string `\"\"`\n *\n * @example\n *\n * ```\n * // Replace postcodes in a body of text\n * replace(\"The PM and her no.2 live at SW1A2AA and SW1A 2AB\");\n * // => { match: [\"SW1A2AA\", \"SW1A 2AB\"], result: \"The PM and her no.2 live at  and \" }\n *\n * // Add custom replacement\n * replace(\"The PM lives at SW1A 2AA\", \"Downing Street\");\n * // => { match: [\"SW1A 2AA\"], result: \"The PM lives at Downing Street\" };\n *\n * // No match\n * replace(\"Some London outward codes are SW1A, NW1 and E1\");\n * // => { match: [], result: \"Some London outward codes are SW1A, NW1 and E1\" }\n * ```\n */\nexport const replace = (corpus, replaceWith = \"\") => ({\n    match: match(corpus),\n    result: corpus.replace(POSTCODE_CORPUS_REGEX, replaceWith),\n});\nexport const FIXABLE_REGEX = /^\\s*[a-z01]{1,2}[0-9oi][a-z\\d]?\\s*[0-9oi][a-z01]{2}\\s*$/i;\n/**\n * Attempts to fix and clean a postcode. Specifically:\n * - Performs character conversion on obviously wrong and commonly mixed up letters (e.g. O => 0 and vice versa)\n * - Trims string\n * - Properly adds space between outward and inward codes\n *\n * If the postcode cannot be coerced into a valid format, the original string is returned\n *\n * @example\n * ```javascript\n * fix(\" SW1A  2AO\") => \"SW1A 2AO\" // Properly spaces\n * fix(\"SW1A 2A0\") => \"SW1A 2AO\" // 0 is coerced into \"0\"\n * ```\n *\n * Aims to be used in conjunction with parse to make postcode entry more forgiving:\n *\n * @example\n * ```javascript\n * const { inward } = parse(fix(\"SW1A 2A0\")); // inward = \"2AO\"\n * ```\n */\nexport const fix = (s) => {\n    const match = s.match(FIXABLE_REGEX);\n    if (match === null)\n        return s;\n    s = s.toUpperCase().trim().replace(/\\s+/gi, \"\");\n    const l = s.length;\n    const inward = s.slice(l - 3, l);\n    return `${coerceOutcode(s.slice(0, l - 3))} ${coerce(\"NLL\", inward)}`;\n};\nconst toLetter = {\n    \"0\": \"O\",\n    \"1\": \"I\",\n};\nconst toNumber = {\n    O: \"0\",\n    I: \"1\",\n};\nconst coerceOutcode = (i) => {\n    if (i.length === 2)\n        return coerce(\"LN\", i);\n    if (i.length === 3)\n        return coerce(\"L??\", i);\n    if (i.length === 4)\n        return coerce(\"LLN?\", i);\n    return i;\n};\n/**\n * Given a pattern of letters, numbers and unknowns represented as a sequence\n * of L, Ns and ? respectively; coerce them into the correct type given a\n * mapping of potentially confused letters\n *\n * @hidden\n *\n * @example coerce(\"LLN\", \"0O8\") => \"OO8\"\n */\nconst coerce = (pattern, input) => input\n    .split(\"\")\n    .reduce((acc, c, i) => {\n    const target = pattern.charAt(i);\n    if (target === \"N\")\n        acc.push(toNumber[c] || c);\n    if (target === \"L\")\n        acc.push(toLetter[c] || c);\n    if (target === \"?\")\n        acc.push(c);\n    return acc;\n}, [])\n    .join(\"\");\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","//todo: consent mode debugging/check: https://developers.google.com/tag-platform/devguides/consent-debugging\nimport { getConsentCookie, isValidConsentCookie } from './cookie-functions';\nimport { toOutcode } from './postcode';\nfunction gtag(command, ...args) {\n    window.dataLayer = window.dataLayer || [];\n    window.dataLayer.push(arguments);\n}\nlet GaMeasurementId = '';\n//todo: use prototype? (or class?)\n// (having an object (prototype/class) will ensure that GaMeasurementId will have already been set)\nexport default function initAnalytics(gaMeasurementId) {\n    // if the environment doesn't have a measurement id, don't load analytics\n    if (!Boolean(gaMeasurementId)) {\n        return;\n    }\n    GaMeasurementId = gaMeasurementId;\n    setDefaultConsent();\n    loadGaScript(gaMeasurementId);\n    gtag('js', new Date());\n    const pageViewParams = getPiiSafePageView(gaMeasurementId);\n    // set the config for auto generated events other than page_view\n    gtag('config', gaMeasurementId, {\n        send_page_view: false, //disable auto page_view measurement\n        page_path: pageViewParams.page_path,\n        page_location: pageViewParams.page_location,\n        page_referrer: pageViewParams.referrer,\n        cookie_flags: 'secure'\n    });\n    const userConsent = getConsentCookie();\n    if (userConsent && isValidConsentCookie(userConsent) && userConsent.analytics) {\n        updateAnalyticsStorageConsent(true);\n    }\n    sendPageViewEvent();\n    sendFilterPageCustomEvent();\n}\nfunction setDefaultConsent() {\n    gtag('consent', 'default', {\n        'analytics_storage': 'denied'\n    });\n    gtag('set', 'url_passthrough', true);\n}\nexport function updateAnalyticsStorageConsent(granted, delayMs) {\n    let options = {\n        'analytics_storage': granted ? 'granted' : 'denied'\n    };\n    if (typeof delayMs !== 'undefined') {\n        options['wait_for_update'] = delayMs;\n    }\n    gtag('consent', 'update', options);\n}\nexport function sendPageViewEvent() {\n    // send the page_view event manually (https://developers.google.com/analytics/devguides/collection/gtagjs/pages#default_behavior)\n    gtag('event', 'page_view', getPiiSafePageView(GaMeasurementId));\n}\nexport function sendFilterPageCustomEvent() {\n    //todo: make filter page only\n    const element = document.getElementById('results');\n    const totalResults = element === null || element === void 0 ? void 0 : element.getAttribute('data-total-results');\n    if (totalResults === undefined)\n        return;\n    gtag('event', 'filter_page', {\n        'total_results': totalResults\n    });\n}\nexport function sendAnalyticsCustomEvent(accepted, source) {\n    gtag('event', 'analytics', {\n        'accepted': accepted,\n        'source': source\n    });\n}\nfunction loadGaScript(gaMeasurementId) {\n    const f = document.getElementsByTagName('script')[0];\n    const j = document.createElement('script');\n    j.async = true;\n    j.src = 'https://www.googletagmanager.com/gtag/js?id=' + gaMeasurementId;\n    f.parentNode.insertBefore(j, f);\n}\nfunction getPiiSafePageView(gaMeasurementId) {\n    const pageView = {\n        page_title: document.title,\n        send_to: gaMeasurementId,\n        referrer: '',\n        page_location: '',\n        page_path: ''\n    };\n    //todo: set as referrer or page_referrer in pageView - does it matter? is it only picking it up from the config?\n    //todo: get piisafe referrer function\n    if (document.referrer !== '') {\n        const referrerUrl = new URL(document.referrer);\n        const piiSafeReferrerQueryString = getPiiSafeQueryString(referrerUrl.search);\n        if (piiSafeReferrerQueryString == null) {\n            pageView.referrer = document.referrer;\n        }\n        else {\n            const urlArray = document.referrer.split('?');\n            pageView.referrer = urlArray[0] + piiSafeReferrerQueryString;\n        }\n    }\n    const piiSafeQueryString = getPiiSafeQueryString(window.location.search);\n    if (piiSafeQueryString == null) {\n        pageView.page_location = window.location.href;\n        pageView.page_path = window.location.pathname + window.location.search;\n        return pageView;\n    }\n    const urlArray = window.location.href.split('?');\n    pageView.page_location = urlArray[0] + piiSafeQueryString;\n    pageView.page_path = window.location.pathname + piiSafeQueryString;\n    return pageView;\n}\nfunction getPiiSafeQueryString(queryString) {\n    //todo: for safety, convert to lowercase, so that if the user changes the case of the url, we still don't collect pii\n    const queryParams = new URLSearchParams(queryString);\n    let postcode = queryParams.get('postcode');\n    if (postcode == null) {\n        // null indicates original query params were already pii safe\n        return null;\n    }\n    postcode = toOutcode(postcode);\n    queryParams.set('postcode', postcode);\n    queryParams.delete('latitude');\n    queryParams.delete('longitude');\n    return '?' + queryParams.toString();\n}\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvYW5hbHl0aWNzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLDRHQUE0RztBQUU1RyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQTtBQUMzRSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sWUFBWSxDQUFBO0FBRXRDLFNBQVMsSUFBSSxDQUFDLE9BQWUsRUFBRSxHQUFHLElBQVc7SUFDekMsTUFBTSxDQUFDLFNBQVMsR0FBRyxNQUFNLENBQUMsU0FBUyxJQUFJLEVBQUUsQ0FBQztJQUMxQyxNQUFNLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztBQUNyQyxDQUFDO0FBRUQsSUFBSSxlQUFlLEdBQVcsRUFBRSxDQUFDO0FBRWpDLGtDQUFrQztBQUNsQyxtR0FBbUc7QUFDbkcsTUFBTSxDQUFDLE9BQU8sVUFBVSxhQUFhLENBQUMsZUFBdUI7SUFFekQseUVBQXlFO0lBQ3pFLElBQUksQ0FBQyxPQUFPLENBQUMsZUFBZSxDQUFDLEVBQUUsQ0FBQztRQUM1QixPQUFPO0lBQ1gsQ0FBQztJQUVELGVBQWUsR0FBRyxlQUFlLENBQUM7SUFFbEMsaUJBQWlCLEVBQUUsQ0FBQztJQUVwQixZQUFZLENBQUMsZUFBZSxDQUFDLENBQUM7SUFFOUIsSUFBSSxDQUFDLElBQUksRUFBRSxJQUFJLElBQUksRUFBRSxDQUFDLENBQUM7SUFFdkIsTUFBTSxjQUFjLEdBQUcsa0JBQWtCLENBQUMsZUFBZSxDQUFDLENBQUM7SUFFM0QsZ0VBQWdFO0lBQ2hFLElBQUksQ0FBQyxRQUFRLEVBQUUsZUFBZSxFQUFFO1FBQzVCLGNBQWMsRUFBRSxLQUFLLEVBQUUsb0NBQW9DO1FBQzNELFNBQVMsRUFBRSxjQUFjLENBQUMsU0FBUztRQUNuQyxhQUFhLEVBQUUsY0FBYyxDQUFDLGFBQWE7UUFDM0MsYUFBYSxFQUFFLGNBQWMsQ0FBQyxRQUFRO1FBQ3RDLFlBQVksRUFBRSxRQUFRO0tBQ3pC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LHFIQUFxSDtJQUNySCxNQUFNLFdBQVcsR0FBRyxJQUFJLGVBQWUsQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUVyRCxJQUFJLFFBQVEsR0FBRyxXQUFXLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQzNDLElBQUksUUFBUSxJQUFJLElBQUksRUFBRSxDQUFDO1FBQ25CLDZEQUE2RDtRQUM3RCxPQUFPLElBQUksQ0FBQztJQUNoQixDQUFDO0lBRUQsUUFBUSxHQUFHLFNBQVMsQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUMvQixXQUFXLENBQUMsR0FBRyxDQUFDLFVBQVUsRUFBRSxRQUFRLENBQUMsQ0FBQztJQUN0QyxXQUFXLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQy9CLFdBQVcsQ0FBQyxNQUFNLENBQUMsV0FBVyxDQUFDLENBQUM7SUFFaEMsT0FBTyxHQUFHLEdBQUcsV0FBVyxDQUFDLFFBQVEsRUFBRSxDQUFDO0FBQ3hDLENBQUMiLCJmaWxlIjoiY29tcG9uZW50cy9hbmFseXRpY3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuLy90b2RvOiBjb25zZW50IG1vZGUgZGVidWdnaW5nL2NoZWNrOiBodHRwczovL2RldmVsb3BlcnMuZ29vZ2xlLmNvbS90YWctcGxhdGZvcm0vZGV2Z3VpZGVzL2NvbnNlbnQtZGVidWdnaW5nXHJcblxyXG5pbXBvcnQgeyBnZXRDb25zZW50Q29va2llLCBpc1ZhbGlkQ29uc2VudENvb2tpZSB9IGZyb20gJy4vY29va2llLWZ1bmN0aW9ucydcclxuaW1wb3J0IHsgdG9PdXRjb2RlIH0gZnJvbSAnLi9wb3N0Y29kZSdcclxuXHJcbmZ1bmN0aW9uIGd0YWcoY29tbWFuZDogc3RyaW5nLCAuLi5hcmdzOiBhbnlbXSk6IHZvaWQge1xyXG4gICAgd2luZG93LmRhdGFMYXllciA9IHdpbmRvdy5kYXRhTGF5ZXIgfHwgW107XHJcbiAgICB3aW5kb3cuZGF0YUxheWVyLnB1c2goYXJndW1lbnRzKTtcclxufVxyXG5cclxubGV0IEdhTWVhc3VyZW1lbnRJZDogc3RyaW5nID0gJyc7XHJcblxyXG4vL3RvZG86IHVzZSBwcm90b3R5cGU/IChvciBjbGFzcz8pXHJcbi8vIChoYXZpbmcgYW4gb2JqZWN0IChwcm90b3R5cGUvY2xhc3MpIHdpbGwgZW5zdXJlIHRoYXQgR2FNZWFzdXJlbWVudElkIHdpbGwgaGF2ZSBhbHJlYWR5IGJlZW4gc2V0KVxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBpbml0QW5hbHl0aWNzKGdhTWVhc3VyZW1lbnRJZDogc3RyaW5nKSB7XHJcblxyXG4gICAgLy8gaWYgdGhlIGVudmlyb25tZW50IGRvZXNuJ3QgaGF2ZSBhIG1lYXN1cmVtZW50IGlkLCBkb24ndCBsb2FkIGFuYWx5dGljc1xyXG4gICAgaWYgKCFCb29sZWFuKGdhTWVhc3VyZW1lbnRJZCkpIHtcclxuICAgICAgICByZXR1cm47XHJcbiAgICB9XHJcblxyXG4gICAgR2FNZWFzdXJlbWVudElkID0gZ2FNZWFzdXJlbWVudElkO1xyXG5cclxuICAgIHNldERlZmF1bHRDb25zZW50KCk7XHJcblxyXG4gICAgbG9hZEdhU2NyaXB0KGdhTWVhc3VyZW1lbnRJZCk7XHJcblxyXG4gICAgZ3RhZygnanMnLCBuZXcgRGF0ZSgpKTtcclxuXHJcbiAgICBjb25zdCBwYWdlVmlld1BhcmFtcyA9IGdldFBpaVNhZmVQYWdlVmlldyhnYU1lYXN1cmVtZW50SWQpO1xyXG5cclxuICAgIC8vIHNldCB0aGUgY29uZmlnIGZvciBhdXRvIGdlbmVyYXRlZCBldmVudHMgb3RoZXIgdGhhbiBwYWdlX3ZpZXdcclxuICAgIGd0YWcoJ2NvbmZpZycsIGdhTWVhc3VyZW1lbnRJZCwge1xyXG4gICAgICAgIHNlbmRfcGFnZV92aWV3OiBmYWxzZSwgLy9kaXNhYmxlIGF1dG8gcGFnZV92aWV3IG1lYXN1cmVtZW50XHJcbiAgICAgICAgcGFnZV9wYXRoOiBwYWdlVmlld1BhcmFtcy5wYWdlX3BhdGgsXHJcbiAgICAgICAgcGFnZV9sb2NhdGlvbjogcGFnZVZpZXdQYXJhbXMucGFnZV9sb2NhdGlvbixcclxuICAgICAgICBwYWdlX3JlZmVycmVyOiBwYWdlVmlld1BhcmFtcy5yZWZlcnJlcixcclxuICAgICAgICBjb29raWVfZmxhZ3M6ICdzZWN1cmUnXHJcbiAgICB9KTtcclxuXHJcbiAgICBjb25zdCB1c2VyQ29uc2VudCA9IGdldENvbnNlbnRDb29raWUoKTtcclxuICAgIGlmICh1c2VyQ29uc2VudCAmJiBpc1ZhbGlkQ29uc2VudENvb2tpZSh1c2VyQ29uc2VudCkgJiYgdXNlckNvbnNlbnQuYW5hbHl0aWNzKSB7XHJcbiAgICAgICAgdXBkYXRlQW5hbHl0aWNzU3RvcmFnZUNvbnNlbnQodHJ1ZSk7XHJcbiAgICB9XHJcblxyXG4gICAgc2VuZFBhZ2VWaWV3RXZlbnQoKTtcclxuICAgIHNlbmRGaWx0ZXJQYWdlQ3VzdG9tRXZlbnQoKTtcclxufVxyXG5cclxuZnVuY3Rpb24gc2V0RGVmYXVsdENvbnNlbnQoKSB7XHJcbiAgICBndGFnKCdjb25zZW50JywgJ2RlZmF1bHQnLCB7XHJcbiAgICAgICAgJ2FuYWx5dGljc19zdG9yYWdlJzogJ2RlbmllZCdcclxuICAgIH0pO1xyXG5cclxuICAgIGd0YWcoJ3NldCcsICd1cmxfcGFzc3Rocm91Z2gnLCB0cnVlKTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHVwZGF0ZUFuYWx5dGljc1N0b3JhZ2VDb25zZW50KGdyYW50ZWQ6IGJvb2xlYW4sIGRlbGF5TXM/OiBudW1iZXIpIHtcclxuXHJcbiAgICBsZXQgb3B0aW9ucyA9IHtcclxuICAgICAgICAnYW5hbHl0aWNzX3N0b3JhZ2UnOiBncmFudGVkID8gJ2dyYW50ZWQnIDogJ2RlbmllZCdcclxuICAgIH07XHJcblxyXG4gICAgaWYgKHR5cGVvZiBkZWxheU1zICE9PSAndW5kZWZpbmVkJykge1xyXG4gICAgICAgIG9wdGlvbnNbJ3dhaXRfZm9yX3VwZGF0ZSddID0gZGVsYXlNcztcclxuICAgIH1cclxuXHJcbiAgICBndGFnKCdjb25zZW50JywgJ3VwZGF0ZScsIG9wdGlvbnMpO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gc2VuZFBhZ2VWaWV3RXZlbnQoKSB7XHJcbiAgICAvLyBzZW5kIHRoZSBwYWdlX3ZpZXcgZXZlbnQgbWFudWFsbHkgKGh0dHBzOi8vZGV2ZWxvcGVycy5nb29nbGUuY29tL2FuYWx5dGljcy9kZXZndWlkZXMvY29sbGVjdGlvbi9ndGFnanMvcGFnZXMjZGVmYXVsdF9iZWhhdmlvcilcclxuICAgIGd0YWcoJ2V2ZW50JywgJ3BhZ2VfdmlldycsIGdldFBpaVNhZmVQYWdlVmlldyhHYU1lYXN1cmVtZW50SWQpKTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHNlbmRGaWx0ZXJQYWdlQ3VzdG9tRXZlbnQoKSB7XHJcbiAgICAvL3RvZG86IG1ha2UgZmlsdGVyIHBhZ2Ugb25seVxyXG4gICAgY29uc3QgZWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyZXN1bHRzJyk7XHJcbiAgICBjb25zdCB0b3RhbFJlc3VsdHMgPSBlbGVtZW50Py5nZXRBdHRyaWJ1dGUoJ2RhdGEtdG90YWwtcmVzdWx0cycpO1xyXG4gICAgaWYgKHRvdGFsUmVzdWx0cyA9PT0gdW5kZWZpbmVkKVxyXG4gICAgICAgIHJldHVybjtcclxuXHJcbiAgICBndGFnKCdldmVudCcsICdmaWx0ZXJfcGFnZScsIHtcclxuICAgICAgICAndG90YWxfcmVzdWx0cyc6IHRvdGFsUmVzdWx0c1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBzZW5kQW5hbHl0aWNzQ3VzdG9tRXZlbnQoYWNjZXB0ZWQ6IGJvb2xlYW4sIHNvdXJjZTogc3RyaW5nKSB7XHJcblxyXG4gICAgZ3RhZygnZXZlbnQnLCAnYW5hbHl0aWNzJywge1xyXG4gICAgICAgICdhY2NlcHRlZCc6IGFjY2VwdGVkLFxyXG4gICAgICAgICdzb3VyY2UnOiBzb3VyY2VcclxuICAgIH0pO1xyXG59XHJcblxyXG5mdW5jdGlvbiBsb2FkR2FTY3JpcHQoZ2FNZWFzdXJlbWVudElkOiBzdHJpbmcpIHtcclxuICAgIGNvbnN0IGYgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnc2NyaXB0JylbMF07XHJcbiAgICBjb25zdCBqID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2NyaXB0Jyk7XHJcbiAgICBqLmFzeW5jID0gdHJ1ZTtcclxuICAgIGouc3JjID0gJ2h0dHBzOi8vd3d3Lmdvb2dsZXRhZ21hbmFnZXIuY29tL2d0YWcvanM/aWQ9JyArIGdhTWVhc3VyZW1lbnRJZDtcclxuICAgIGYucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoaiwgZik7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGdldFBpaVNhZmVQYWdlVmlldyhnYU1lYXN1cmVtZW50SWQ6IHN0cmluZykge1xyXG5cclxuICAgIGNvbnN0IHBhZ2VWaWV3ID0ge1xyXG4gICAgICAgIHBhZ2VfdGl0bGU6IGRvY3VtZW50LnRpdGxlLFxyXG4gICAgICAgIHNlbmRfdG86IGdhTWVhc3VyZW1lbnRJZCxcclxuICAgICAgICByZWZlcnJlcjogJycsXHJcbiAgICAgICAgcGFnZV9sb2NhdGlvbjogJycsXHJcbiAgICAgICAgcGFnZV9wYXRoOiAnJ1xyXG4gICAgfTtcclxuXHJcbiAgICAvL3RvZG86IHNldCBhcyByZWZlcnJlciBvciBwYWdlX3JlZmVycmVyIGluIHBhZ2VWaWV3IC0gZG9lcyBpdCBtYXR0ZXI/IGlzIGl0IG9ubHkgcGlja2luZyBpdCB1cCBmcm9tIHRoZSBjb25maWc/XHJcbiAgICAvL3RvZG86IGdldCBwaWlzYWZlIHJlZmVycmVyIGZ1bmN0aW9uXHJcbiAgICBpZiAoZG9jdW1lbnQucmVmZXJyZXIgIT09ICcnKSB7XHJcbiAgICAgICAgY29uc3QgcmVmZXJyZXJVcmwgPSBuZXcgVVJMKGRvY3VtZW50LnJlZmVycmVyKTtcclxuICAgICAgICBjb25zdCBwaWlTYWZlUmVmZXJyZXJRdWVyeVN0cmluZyA9IGdldFBpaVNhZmVRdWVyeVN0cmluZyhyZWZlcnJlclVybC5zZWFyY2gpO1xyXG4gICAgICAgIGlmIChwaWlTYWZlUmVmZXJyZXJRdWVyeVN0cmluZyA9PSBudWxsKSB7XHJcbiAgICAgICAgICAgIHBhZ2VWaWV3LnJlZmVycmVyID0gZG9jdW1lbnQucmVmZXJyZXI7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgY29uc3QgdXJsQXJyYXkgPSBkb2N1bWVudC5yZWZlcnJlci5zcGxpdCgnPycpO1xyXG5cclxuICAgICAgICAgICAgcGFnZVZpZXcucmVmZXJyZXIgPSB1cmxBcnJheVswXSArIHBpaVNhZmVSZWZlcnJlclF1ZXJ5U3RyaW5nO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBwaWlTYWZlUXVlcnlTdHJpbmcgPSBnZXRQaWlTYWZlUXVlcnlTdHJpbmcod2luZG93LmxvY2F0aW9uLnNlYXJjaCk7XHJcblxyXG4gICAgaWYgKHBpaVNhZmVRdWVyeVN0cmluZyA9PSBudWxsKSB7XHJcbiAgICAgICAgcGFnZVZpZXcucGFnZV9sb2NhdGlvbiA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmO1xyXG4gICAgICAgIHBhZ2VWaWV3LnBhZ2VfcGF0aCA9IHdpbmRvdy5sb2NhdGlvbi5wYXRobmFtZSArIHdpbmRvdy5sb2NhdGlvbi5zZWFyY2g7XHJcblxyXG4gICAgICAgIHJldHVybiBwYWdlVmlldztcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCB1cmxBcnJheSA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmLnNwbGl0KCc/Jyk7XHJcblxyXG4gICAgcGFnZVZpZXcucGFnZV9sb2NhdGlvbiA9IHVybEFycmF5WzBdICsgcGlpU2FmZVF1ZXJ5U3RyaW5nO1xyXG4gICAgcGFnZVZpZXcucGFnZV9wYXRoID0gd2luZG93LmxvY2F0aW9uLnBhdGhuYW1lICsgcGlpU2FmZVF1ZXJ5U3RyaW5nO1xyXG5cclxuICAgIHJldHVybiBwYWdlVmlldztcclxufVxyXG5cclxuZnVuY3Rpb24gZ2V0UGlpU2FmZVF1ZXJ5U3RyaW5nKHF1ZXJ5U3RyaW5nOiBzdHJpbmcpOiBzdHJpbmcgfCBudWxsIHtcclxuXHJcbiAgICAvL3RvZG86IGZvciBzYWZldHksIGNvbnZlcnQgdG8gbG93ZXJjYXNlLCBzbyB0aGF0IGlmIHRoZSB1c2VyIGNoYW5nZXMgdGhlIGNhc2Ugb2YgdGhlIHVybCwgd2Ugc3RpbGwgZG9uJ3QgY29sbGVjdCBwaWlcclxuICAgIGNvbnN0IHF1ZXJ5UGFyYW1zID0gbmV3IFVSTFNlYXJjaFBhcmFtcyhxdWVyeVN0cmluZyk7XHJcblxyXG4gICAgbGV0IHBvc3Rjb2RlID0gcXVlcnlQYXJhbXMuZ2V0KCdwb3N0Y29kZScpO1xyXG4gICAgaWYgKHBvc3Rjb2RlID09IG51bGwpIHtcclxuICAgICAgICAvLyBudWxsIGluZGljYXRlcyBvcmlnaW5hbCBxdWVyeSBwYXJhbXMgd2VyZSBhbHJlYWR5IHBpaSBzYWZlXHJcbiAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9XHJcblxyXG4gICAgcG9zdGNvZGUgPSB0b091dGNvZGUocG9zdGNvZGUpO1xyXG4gICAgcXVlcnlQYXJhbXMuc2V0KCdwb3N0Y29kZScsIHBvc3Rjb2RlKTtcclxuICAgIHF1ZXJ5UGFyYW1zLmRlbGV0ZSgnbGF0aXR1ZGUnKTtcclxuICAgIHF1ZXJ5UGFyYW1zLmRlbGV0ZSgnbG9uZ2l0dWRlJyk7XHJcblxyXG4gICAgcmV0dXJuICc/JyArIHF1ZXJ5UGFyYW1zLnRvU3RyaW5nKCk7XHJcbn1cclxuIl19\n","import * as CookieFunctions from './cookie-functions.js';\n/*todo: we don't meed a pollyfill for bind, as long as we server up the non js version of the site for ie8 (https://caniuse.com/?search=bind) */\n/*import 'govuk-frontend/govuk/vendor/polyfills/Function/prototype/bind'*/\n/*todo: i think we're ok for this too (see above about ie8), but we _might_ need it for >8 ie (use? https://www.npmjs.com/package/events-polyfill)*/\n/*import 'govuk-frontend/govuk/vendor/polyfills/Event'*/\nimport { nodeListForEach } from './helpers';\nimport { sendPageViewEvent, sendFilterPageCustomEvent, sendAnalyticsCustomEvent, updateAnalyticsStorageConsent } from './analytics';\nconst cookieBannerAcceptSelector = '.js-cookie-banner-accept';\nconst cookieBannerRejectSelector = '.js-cookie-banner-reject';\nconst cookieBannerHideButtonSelector = '.js-cookie-banner-hide';\nconst cookieMessageSelector = '.js-cookie-banner-message';\nconst cookieConfirmationAcceptSelector = '.js-cookie-banner-confirmation-accept';\nconst cookieConfirmationRejectSelector = '.js-cookie-banner-confirmation-reject';\nexport default function CookieBanner($module) {\n    this.$module = $module;\n}\nCookieBanner.prototype.init = function () {\n    this.$cookieBanner = this.$module;\n    this.$acceptButton = this.$module.querySelector(cookieBannerAcceptSelector);\n    this.$rejectButton = this.$module.querySelector(cookieBannerRejectSelector);\n    this.$cookieMessage = this.$module.querySelector(cookieMessageSelector);\n    this.$cookieConfirmationAccept = this.$module.querySelector(cookieConfirmationAcceptSelector);\n    this.$cookieConfirmationReject = this.$module.querySelector(cookieConfirmationRejectSelector);\n    this.$cookieBannerHideButtons = this.$module.querySelectorAll(cookieBannerHideButtonSelector);\n    // Exit if no cookie banner module\n    // or if we're on the cookies page to avoid circular journeys\n    if (!this.$cookieBanner || this.onCookiesPage()) {\n        return;\n    }\n    // Show the cookie banner to users who have not consented or have an\n    // outdated consent cookie\n    var currentConsentCookie = CookieFunctions.getConsentCookie();\n    if (!currentConsentCookie || !CookieFunctions.isValidConsentCookie(currentConsentCookie)) {\n        // If the consent cookie version is not valid, we need to remove any cookies which have been\n        // set previously\n        CookieFunctions.resetCookies();\n        this.$cookieBanner.removeAttribute('hidden');\n    }\n    this.$acceptButton.addEventListener('click', this.acceptCookies.bind(this));\n    this.$rejectButton.addEventListener('click', this.rejectCookies.bind(this));\n    nodeListForEach(this.$cookieBannerHideButtons, function ($cookieBannerHideButton) {\n        $cookieBannerHideButton.addEventListener('click', this.hideBanner.bind(this));\n    }.bind(this));\n};\nCookieBanner.prototype.hideBanner = function () {\n    this.$cookieBanner.setAttribute('hidden', true);\n};\nCookieBanner.prototype.acceptCookies = function () {\n    // Do actual cookie consent bit\n    CookieFunctions.setConsentCookie({ analytics: true });\n    updateAnalyticsStorageConsent(true);\n    sendAnalyticsCustomEvent(true, 'banner');\n    sendPageViewEvent();\n    sendFilterPageCustomEvent();\n    // Hide banner and show confirmation message\n    this.$cookieMessage.setAttribute('hidden', true);\n    this.revealConfirmationMessage(this.$cookieConfirmationAccept);\n};\nCookieBanner.prototype.rejectCookies = function () {\n    updateAnalyticsStorageConsent(true);\n    sendAnalyticsCustomEvent(false, 'banner');\n    updateAnalyticsStorageConsent(false);\n    //setTimeout(CookieFunctions.setConsentCookie.bind({ analytics: false }), 250);\n    CookieFunctions.setConsentCookie({ analytics: false });\n    // Hide banner and show confirmation message\n    this.$cookieMessage.setAttribute('hidden', true);\n    this.revealConfirmationMessage(this.$cookieConfirmationReject);\n};\nCookieBanner.prototype.revealConfirmationMessage = function (confirmationMessage) {\n    confirmationMessage.removeAttribute('hidden');\n    // Set tabindex to -1 to make the confirmation banner focusable with JavaScript\n    if (!confirmationMessage.getAttribute('tabindex')) {\n        confirmationMessage.setAttribute('tabindex', '-1');\n        confirmationMessage.addEventListener('blur', function () {\n            confirmationMessage.removeAttribute('tabindex');\n        });\n    }\n    confirmationMessage.focus();\n};\nCookieBanner.prototype.onCookiesPage = function () {\n    return window.location.pathname === '/cookies/';\n};\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","import { getConsentCookie, setConsentCookie } from './cookie-functions';\nimport { nodeListForEach } from './helpers';\nimport { sendPageViewEvent, sendAnalyticsCustomEvent, updateAnalyticsStorageConsent } from './analytics';\nfunction CookiesPage($module) {\n    this.$module = $module;\n}\nCookiesPage.prototype.init = function () {\n    this.$cookiePage = this.$module;\n    if (!this.$cookiePage) {\n        return;\n    }\n    this.$cookieForm = this.$cookiePage.querySelector('.js-cookies-page-form');\n    this.$cookieFormFieldsets = this.$cookieForm.querySelectorAll('.js-cookies-page-form-fieldset');\n    this.$successNotification = this.$cookiePage.querySelector('.js-cookies-page-success');\n    this.$successLink = this.$cookiePage.querySelector('.js-cookies-page-success-link');\n    nodeListForEach(this.$cookieFormFieldsets, function ($cookieFormFieldset) {\n        this.showUserPreference($cookieFormFieldset, getConsentCookie());\n        /*        $cookieFormFieldset.removeAttribute('hidden')*/\n    }.bind(this));\n    // Show submit button\n    //this.$cookieForm.querySelector('.js-cookies-form-button').removeAttribute('hidden')\n    this.$cookieForm.addEventListener('submit', this.savePreferences.bind(this));\n};\nCookiesPage.prototype.savePreferences = function (event) {\n    // Stop default form submission behaviour\n    event.preventDefault();\n    var preferences = {};\n    nodeListForEach(this.$cookieFormFieldsets, function ($cookieFormFieldset) {\n        var cookieType = this.getCookieType($cookieFormFieldset);\n        var selectedItem = $cookieFormFieldset.querySelector('input[name=' + cookieType + ']:checked').value;\n        preferences[cookieType] = selectedItem === 'true';\n    }.bind(this));\n    updateAnalyticsStorageConsent(true);\n    const analyticsAccepted = preferences['analytics'];\n    sendAnalyticsCustomEvent(analyticsAccepted, 'cookies');\n    if (analyticsAccepted) {\n        sendPageViewEvent();\n    }\n    else {\n        updateAnalyticsStorageConsent(false);\n    }\n    setConsentCookie(preferences);\n    // handle the corner case, where the user has selected their preference on the cookie page, whilst the banner is still open as they haven't previously selected their preference\n    //todo: call hideBanner\n    var banner = document.querySelector('[data-module=\"govuk-cookie-banner\"]');\n    banner.setAttribute('hidden', 'true');\n    this.showSuccessNotification();\n};\nCookiesPage.prototype.showUserPreference = function ($cookieFormFieldset, preferences) {\n    var cookieType = this.getCookieType($cookieFormFieldset);\n    var preference = false;\n    if (cookieType && preferences && preferences[cookieType] !== undefined) {\n        preference = preferences[cookieType];\n    }\n    var radioValue = preference ? 'true' : 'false';\n    var radio = $cookieFormFieldset.querySelector('input[name=' + cookieType + '][value=' + radioValue + ']');\n    radio.checked = true;\n};\nCookiesPage.prototype.showSuccessNotification = function () {\n    this.$successNotification.removeAttribute('hidden');\n    // if the user's come to the cookies page through the link in the cookie banner, show a link to take them back to the page they came from\n    //todo: use full url?\n    var referrer = document.referrer ? new URL(document.referrer).pathname : false;\n    if (referrer && referrer !== document.location.pathname) {\n        this.$successLink.href = referrer;\n        this.$successLink.removeAttribute('hidden');\n    }\n    else {\n        this.$successLink.setAttribute('hidden', 'true');\n    }\n    // Set tabindex to -1 to make the element focusable with JavaScript.\n    // GOV.UK Frontend will remove the tabindex on blur as the component doesn't\n    // need to be focusable after the user has read the text.\n    if (!this.$successNotification.getAttribute('tabindex')) {\n        this.$successNotification.setAttribute('tabindex', '-1');\n    }\n    this.$successNotification.focus();\n    // scroll to the top of the page\n    window.scrollTo(0, 0);\n};\nCookiesPage.prototype.getCookieType = function ($cookieFormFieldset) {\n    return $cookieFormFieldset.id;\n};\nexport default CookiesPage;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvY29va2llcy1wYWdlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxnQkFBZ0IsRUFBaUIsTUFBTSxvQkFBb0IsQ0FBQTtBQUN0RixPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sV0FBVyxDQUFBO0FBQzNDLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSx3QkFBd0IsRUFBRSw2QkFBNkIsRUFBRSxNQUFNLGFBQWEsQ0FBQTtBQUV4RyxTQUFTLFdBQVcsQ0FBQyxPQUFPO0lBQ3hCLElBQUksQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFBO0FBQzFCLENBQUM7QUFFRCxXQUFXLENBQUMsU0FBUyxDQUFDLElBQUksR0FBRztJQUN6QixJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUE7SUFFL0IsSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUNwQixPQUFNO0lBQ1YsQ0FBQztJQUVELElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxhQUFhLENBQUMsdUJBQXVCLENBQUMsQ0FBQTtJQUMxRSxJQUFJLENBQUMsb0JBQW9CLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxnQkFBZ0IsQ0FBQyxnQ0FBZ0MsQ0FBQyxDQUFBO0lBQy9GLElBQUksQ0FBQyxvQkFBb0IsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLGFBQWEsQ0FBQywwQkFBMEIsQ0FBQyxDQUFBO0lBQ3RGLElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxhQUFhLENBQUMsK0JBQStCLENBQUMsQ0FBQTtJQUVuRixlQUFlLENBQUMsSUFBSSxDQUFDLG9CQUFvQixFQUFFLFVBQVUsbUJBQW1CO1FBQ3BFLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxtQkFBbUIsRUFBRSxnQkFBZ0IsRUFBRSxDQUFDLENBQUE7UUFDeEUseURBQXlEO0lBQ3JELENBQUMsQ0FBQyxJQUFJ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LENBQUMsUUFBUSxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ3RELElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxHQUFHLFFBQVEsQ0FBQztRQUNsQyxJQUFJLENBQUMsWUFBWSxDQUFDLGVBQWUsQ0FBQyxRQUFRLENBQUMsQ0FBQTtJQUMvQyxDQUFDO1NBQU0sQ0FBQztRQUNKLElBQUksQ0FBQyxZQUFZLENBQUMsWUFBWSxDQUFDLFFBQVEsRUFBRSxNQUFNLENBQUMsQ0FBQztJQUNyRCxDQUFDO0lBRUQsb0VBQW9FO0lBQ3BFLDRFQUE0RTtJQUM1RSx5REFBeUQ7SUFDekQsSUFBSSxDQUFDLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxZQUFZLENBQUMsVUFBVSxDQUFDLEVBQUUsQ0FBQztRQUN0RCxJQUFJLENBQUMsb0JBQW9CLENBQUMsWUFBWSxDQUFDLFVBQVUsRUFBRSxJQUFJLENBQUMsQ0FBQTtJQUM1RCxDQUFDO0lBRUQsSUFBSSxDQUFDLG9CQUFvQixDQUFDLEtBQUssRUFBRSxDQUFBO0lBRWpDLGdDQUFnQztJQUNoQyxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQTtBQUN6QixDQUFDLENBQUE7QUFFRCxXQUFXLENBQUMsU0FBUyxDQUFDLGFBQWEsR0FBRyxVQUFVLG1CQUFtQjtJQUMvRCxPQUFPLG1CQUFtQixDQUFDLEVBQUUsQ0FBQTtBQUNqQyxDQUFDLENBQUE7QUFFRCxlQUFlLFdBQVcsQ0FBQSIsImZpbGUiOiJjb21wb25lbnRzL2Nvb2tpZXMtcGFnZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldENvbnNlbnRDb29raWUsIHNldENvbnNlbnRDb29raWUsIENvbnNlbnRDb29raWUgfSBmcm9tICcuL2Nvb2tpZS1mdW5jdGlvbnMnXHJcbmltcG9ydCB7IG5vZGVMaXN0Rm9yRWFjaCB9IGZyb20gJy4vaGVscGVycydcclxuaW1wb3J0IHsgc2VuZFBhZ2VWaWV3RXZlbnQsIHNlbmRBbmFseXRpY3NDdXN0b21FdmVudCwgdXBkYXRlQW5hbHl0aWNzU3RvcmFnZUNvbnNlbnQgfSBmcm9tICcuL2FuYWx5dGljcydcclxuXHJcbmZ1bmN0aW9uIENvb2tpZXNQYWdlKCRtb2R1bGUpIHtcclxuICAgIHRoaXMuJG1vZHVsZSA9ICRtb2R1bGVcclxufVxyXG5cclxuQ29va2llc1BhZ2UucHJvdG90eXBlLmluaXQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICB0aGlzLiRjb29raWVQYWdlID0gdGhpcy4kbW9kdWxlXHJcblxyXG4gICAgaWYgKCF0aGlzLiRjb29raWVQYWdlKSB7XHJcbiAgICAgICAgcmV0dXJuXHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy4kY29va2llRm9ybSA9IHRoaXMuJGNvb2tpZVBhZ2UucXVlcnlTZWxlY3RvcignLmpzLWNvb2tpZXMtcGFnZS1mb3JtJylcclxuICAgIHRoaXMuJGNvb2tpZUZvcm1GaWVsZHNldHMgPSB0aGlzLiRjb29raWVGb3JtLnF1ZXJ5U2VsZWN0b3JBbGwoJy5qcy1jb29raWVzLXBhZ2UtZm9ybS1maWVsZHNldCcpXHJcbiAgICB0aGlzLiRzdWNjZXNzTm90aWZpY2F0aW9uID0gdGhpcy4kY29va2llUGFnZS5xdWVyeVNlbGVjdG9yKCcuanMtY29va2llcy1wYWdlLXN1Y2Nlc3MnKVxyXG4gICAgdGhpcy4kc3VjY2Vzc0xpbmsgPSB0aGlzLiRjb29raWVQYWdlLnF1ZXJ5U2VsZWN0b3IoJy5qcy1jb29raWVzLXBhZ2Utc3VjY2Vzcy1saW5rJylcclxuXHJcbiAgICBub2RlTGlzdEZvckVhY2godGhpcy4kY29va2llRm9ybUZpZWxkc2V0cywgZnVuY3Rpb24gKCRjb29raWVGb3JtRmllbGRzZXQpIHtcclxuICAgICAgICB0aGlzLnNob3dVc2VyUHJlZmVyZW5jZSgkY29va2llRm9ybUZpZWxkc2V0LCBnZXRDb25zZW50Q29va2llKCkpXHJcbi8qICAgICAgICAkY29va2llRm9ybUZpZWxkc2V0LnJlbW92ZUF0dHJpYnV0ZSgnaGlkZGVuJykqL1xyXG4gICAgfS5iaW5kKHRoaXMpKVxyXG5cclxuICAgIC8vIFNob3cgc3VibWl0IGJ1dHRvblxyXG4gICAgLy90aGlzLiRjb29raWVGb3JtLnF1ZXJ5U2VsZWN0b3IoJy5qcy1jb29raWVzLWZvcm0tYnV0dG9uJykucmVtb3ZlQXR0cmlidXRlKCdoaWRkZW4nKVxyXG5cclxuICAgIHRoaXMuJGNvb2tpZUZvcm0uYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgdGhpcy5zYXZlUHJlZmVyZW5jZXMuYmluZCh0aGlzKSlcclxufVxyXG5cclxuQ29va2llc1BhZ2UucHJvdG90eXBlLnNhdmVQcmVmZXJlbmNlcyA9IGZ1bmN0aW9uIChldmVudCkge1xyXG4gICAgLy8gU3RvcCBkZWZhdWx0IGZvcm0gc3VibWlzc2lvbiBiZWhhdmlvdXJcclxuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcblxyXG4gICAgdmFyIHByZWZlcmVuY2VzOiBDb25zZW50Q29va2llID0ge31cclxuXHJcbiAgICBub2RlTGlzdEZvckVhY2godGhpcy4kY29va2llRm9ybUZpZWxkc2V0cyxcclxuICAgICAgICBmdW5jdGlvbigkY29va2llRm9ybUZpZWxkc2V0KSB7XHJcbiAgICAgICAgICAgIHZhciBjb29raWVUeXBlID0gdGhpcy5nZXRDb29raWVUeXBlKCRjb29raWVGb3JtRmllbGRzZXQpXHJcbiAgICAgICAgICAgIHZhciBzZWxlY3RlZEl0ZW0gPSAkY29va2llRm9ybUZpZWxkc2V0LnF1ZXJ5U2VsZWN0b3IoJ2lucHV0W25hbWU9JyArIGNvb2tpZVR5cGUgKyAnXTpjaGVja2VkJykudmFsdWVcclxuXHJcbiAgICAgICAgICAgIHByZWZlcmVuY2VzW2Nvb2tpZVR5cGVdID0gc2VsZWN0ZWRJdGVtID09PSAndHJ1ZSdcclxuICAgICAgICB9LmJpbmQodGhpcykpO1xyXG5cclxuICAgIHVwZGF0ZUFuYWx5dGljc1N0b3JhZ2VDb25zZW50KHRydWUpO1xyXG4gICAgY29uc3QgYW5hbHl0aWNzQWNjZXB0ZWQgPSBwcmVmZXJlbmNlc1snYW5hbHl0aWNzJ107XHJcbiAgICBzZW5kQW5hbHl0aWNzQ3VzdG9tRXZlbnQoYW5hbHl0aWNzQWNjZXB0ZWQsICdjb29raWVzJyk7XHJcblxyXG4gICAgaWYgKGFuYWx5dGljc0FjY2VwdGVkKSB7XHJcbiAgICAgICAgc2VuZFBhZ2VWaWV3RXZlbnQoKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgdXBkYXRlQW5hbHl0aWNzU3RvcmFnZUNvbnNlbnQoZmFsc2UpO1xyXG4gICAgfVxyXG5cclxuICAgIHNldENvbnNlbnRDb29raWUocHJlZmVyZW5jZXMpO1xyXG5cclxuICAgIC8vIGhhbmRsZSB0aGUgY29ybmVyIGNhc2UsIHdoZXJlIHRoZSB1c2VyIGhhcyBzZWxlY3RlZCB0aGVpciBwcmVmZXJlbmNlIG9uIHRoZSBjb29raWUgcGFnZSwgd2hpbHN0IHRoZSBiYW5uZXIgaXMgc3RpbGwgb3BlbiBhcyB0aGV5IGhhdmVuJ3QgcHJldmlvdXNseSBzZWxlY3RlZCB0aGVpciBwcmVmZXJlbmNlXHJcbiAgICAvL3RvZG86IGNhbGwgaGlkZUJhbm5lclxyXG4gICAgdmFyIGJhbm5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLW1vZHVsZT1cImdvdnVrLWNvb2tpZS1iYW5uZXJcIl0nKTtcclxuICAgIGJhbm5lci5zZXRBdHRyaWJ1dGUoJ2hpZGRlbicsICd0cnVlJyk7XHJcbiAgICBcclxuICAgIHRoaXMuc2hvd1N1Y2Nlc3NOb3RpZmljYXRpb24oKVxyXG59XHJcblxyXG5Db29raWVzUGFnZS5wcm90b3R5cGUuc2hvd1VzZXJQcmVmZXJlbmNlID0gZnVuY3Rpb24gKCRjb29raWVGb3JtRmllbGRzZXQsIHByZWZlcmVuY2VzKSB7XHJcbiAgICB2YXIgY29va2llVHlwZSA9IHRoaXMuZ2V0Q29va2llVHlwZSgkY29va2llRm9ybUZpZWxkc2V0KVxyXG4gICAgdmFyIHByZWZlcmVuY2UgPSBmYWxzZVxyXG5cclxuICAgIGlmIChjb29raWVUeXBlICYmIHByZWZlcmVuY2VzICYmIHByZWZlcmVuY2VzW2Nvb2tpZVR5cGVdICE9PSB1bmRlZmluZWQpIHtcclxuICAgICAgICBwcmVmZXJlbmNlID0gcHJlZmVyZW5jZXNbY29va2llVHlwZV1cclxuICAgIH1cclxuXHJcbiAgICB2YXIgcmFkaW9WYWx1ZSA9IHByZWZlcmVuY2UgPyAndHJ1ZScgOiAnZmFsc2UnXHJcbiAgICB2YXIgcmFkaW8gPSAkY29va2llRm9ybUZpZWxkc2V0LnF1ZXJ5U2VsZWN0b3IoJ2lucHV0W25hbWU9JyArIGNvb2tpZVR5cGUgKyAnXVt2YWx1ZT0nICsgcmFkaW9WYWx1ZSArICddJylcclxuICAgIHJhZGlvLmNoZWNrZWQgPSB0cnVlXHJcbn1cclxuXHJcbkNvb2tpZXNQYWdlLnByb3RvdHlwZS5zaG93U3VjY2Vzc05vdGlmaWNhdGlvbiA9IGZ1bmN0aW9uICgpIHtcclxuICAgIHRoaXMuJHN1Y2Nlc3NOb3RpZmljYXRpb24ucmVtb3ZlQXR0cmlidXRlKCdoaWRkZW4nKVxyXG5cclxuICAgIC8vIGlmIHRoZSB1c2VyJ3MgY29tZSB0byB0aGUgY29va2llcyBwYWdlIHRocm91Z2ggdGhlIGxpbmsgaW4gdGhlIGNvb2tpZSBiYW5uZXIsIHNob3cgYSBsaW5rIHRvIHRha2UgdGhlbSBiYWNrIHRvIHRoZSBwYWdlIHRoZXkgY2FtZSBmcm9tXHJcbiAgICAvL3RvZG86IHVzZSBmdWxsIHVybD9cclxuICAgIHZhciByZWZlcnJlciA9IGRvY3VtZW50LnJlZmVycmVyID8gbmV3IFVSTChkb2N1bWVudC5yZWZlcnJlcikucGF0aG5hbWUgOiBmYWxzZTtcclxuICAgIGlmIChyZWZlcnJlciAmJiByZWZlcnJlciAhPT0gZG9jdW1lbnQubG9jYXRpb24ucGF0aG5hbWUpIHtcclxuICAgICAgICB0aGlzLiRzdWNjZXNzTGluay5ocmVmID0gcmVmZXJyZXI7XHJcbiAgICAgICAgdGhpcy4kc3VjY2Vzc0xpbmsucmVtb3ZlQXR0cmlidXRlKCdoaWRkZW4nKVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICB0aGlzLiRzdWNjZXNzTGluay5zZXRBdHRyaWJ1dGUoJ2hpZGRlbicsICd0cnVlJyk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gU2V0IHRhYmluZGV4IHRvIC0xIHRvIG1ha2UgdGhlIGVsZW1lbnQgZm9jdXNhYmxlIHdpdGggSmF2YVNjcmlwdC5cclxuICAgIC8vIEdPVi5VSyBGcm9udGVuZCB3aWxsIHJlbW92ZSB0aGUgdGFiaW5kZXggb24gYmx1ciBhcyB0aGUgY29tcG9uZW50IGRvZXNuJ3RcclxuICAgIC8vIG5lZWQgdG8gYmUgZm9jdXNhYmxlIGFmdGVyIHRoZSB1c2VyIGhhcyByZWFkIHRoZSB0ZXh0LlxyXG4gICAgaWYgKCF0aGlzLiRzdWNjZXNzTm90aWZpY2F0aW9uLmdldEF0dHJpYnV0ZSgndGFiaW5kZXgnKSkge1xyXG4gICAgICAgIHRoaXMuJHN1Y2Nlc3NOb3RpZmljYXRpb24uc2V0QXR0cmlidXRlKCd0YWJpbmRleCcsICctMScpXHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy4kc3VjY2Vzc05vdGlmaWNhdGlvbi5mb2N1cygpXHJcblxyXG4gICAgLy8gc2Nyb2xsIHRvIHRoZSB0b3Agb2YgdGhlIHBhZ2VcclxuICAgIHdpbmRvdy5zY3JvbGxUbygwLCAwKVxyXG59XHJcblxyXG5Db29raWVzUGFnZS5wcm90b3R5cGUuZ2V0Q29va2llVHlwZSA9IGZ1bmN0aW9uICgkY29va2llRm9ybUZpZWxkc2V0KSB7XHJcbiAgICByZXR1cm4gJGNvb2tpZUZvcm1GaWVsZHNldC5pZFxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBDb29raWVzUGFnZSJdfQ==\n","export default function initClarity(clarityId) {\n    // if the environment doesn't have a measurement id, don't load analytics\n    if (!Boolean(clarityId)) {\n        return;\n    }\n    window.clarity = window.clarity || function () {\n        (window.clarity.q = window.clarity.q || []).push(arguments);\n    };\n    loadClarityScript(clarityId);\n}\nfunction loadClarityScript(clarityId) {\n    const f = document.getElementsByTagName('script')[0];\n    const j = document.createElement('script');\n    j.async = true;\n    j.src = 'https://www.clarity.ms/tag/' + clarityId;\n    f.parentNode.insertBefore(j, f);\n}\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvY2xhcml0eS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFNQSxNQUFNLENBQUMsT0FBTyxVQUFVLFdBQVcsQ0FBQyxTQUFpQjtJQUNqRCx5RUFBeUU7SUFDekUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsRUFBRSxDQUFDO1FBQ3RCLE9BQU87SUFDWCxDQUFDO0lBRUQsTUFBTSxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUMsT0FBTyxJQUFJO1FBQy9CLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDLEdBQUcsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFBO0lBQy9ELENBQUMsQ0FBQTtJQUVELGlCQUFpQixDQUFDLFNBQVMsQ0FBQyxDQUFDO0FBQ2pDLENBQUM7QUFFRCxTQUFTLGlCQUFpQixDQUFDLFNBQVM7SUFDaEMsTUFBTSxDQUFDLEdBQUcsUUFBUSxDQUFDLG9CQUFvQixDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ3JELE1BQU0sQ0FBQyxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDM0MsQ0FBQyxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUM7SUFDZixDQUFDLENBQUMsR0FBRyxHQUFHLDZCQUE2QixHQUFHLFNBQVMsQ0FBQztJQUNsRCxDQUFDLENBQUMsVUFBVSxDQUFDLFlBQVksQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7QUFDcEMsQ0FBQyIsImZpbGUiOiJjb21wb25lbnRzL2NsYXJpdHkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJkZWNsYXJlIGdsb2JhbCB7XHJcbiAgICBpbnRlcmZhY2UgV2luZG93IHtcclxuICAgICAgICBjbGFyaXR5OiBhbnk7XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGluaXRDbGFyaXR5KGNsYXJpdHlJZDogc3RyaW5nKSB7XHJcbiAgICAvLyBpZiB0aGUgZW52aXJvbm1lbnQgZG9lc24ndCBoYXZlIGEgbWVhc3VyZW1lbnQgaWQsIGRvbid0IGxvYWQgYW5hbHl0aWNzXHJcbiAgICBpZiAoIUJvb2xlYW4oY2xhcml0eUlkKSkge1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICB3aW5kb3cuY2xhcml0eSA9IHdpbmRvdy5jbGFyaXR5IHx8IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICh3aW5kb3cuY2xhcml0eS5xID0gd2luZG93LmNsYXJpdHkucSB8fCBbXSkucHVzaChhcmd1bWVudHMpXHJcbiAgICB9XHJcblxyXG4gICAgbG9hZENsYXJpdHlTY3JpcHQoY2xhcml0eUlkKTtcclxufVxyXG5cclxuZnVuY3Rpb24gbG9hZENsYXJpdHlTY3JpcHQoY2xhcml0eUlkKSB7XHJcbiAgICBjb25zdCBmID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ3NjcmlwdCcpWzBdO1xyXG4gICAgY29uc3QgaiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpO1xyXG4gICAgai5hc3luYyA9IHRydWU7XHJcbiAgICBqLnNyYyA9ICdodHRwczovL3d3dy5jbGFyaXR5Lm1zL3RhZy8nICsgY2xhcml0eUlkO1xyXG4gICAgZi5wYXJlbnROb2RlLmluc2VydEJlZm9yZShqLCBmKTtcclxufVxyXG4iXX0=\n","// A version of the MOJ's add-another component that plays nice with the accessible autocomplete component\n// and works with errored fields.\n// I did consider subclassing the MOJ's add-another component,\n// but it would have been so coupled that it would've probably broken on an update of the MOJ library.\n// So instead we forked it and made our own version.\n//todo: when accessible-autocomplete creates the input, it doesn't handle the aria-describedby correctly...\n// https://github.com/alphagov/accessible-autocomplete/issues/589\nwindow.FamilyHubsFrontend = window.FamilyHubsFrontend || {};\nexport function initializeAddAnother() {\n    //todo: support options with scope?\n    var $addAnothers = document.querySelectorAll('[data-module=\"fh-add-another\"]');\n    $addAnothers.forEach(function ($addAnother) {\n        new window.FamilyHubsFrontend.AddAnother($addAnother);\n    });\n}\nwindow.FamilyHubsFrontend.AddAnother = function (container) {\n    this.container = $(container);\n    this.index = 0;\n    if (this.container.data('fh-add-another-initialised')) {\n        return;\n    }\n    //todo: this is a bit hacky - find a better way to do this\n    var functionName = container.getAttribute('data-fh-add-another-callback');\n    this.callback = null;\n    document.addEventListener('DOMContentLoaded', function () {\n        if (typeof window[functionName] === 'function') {\n            this.callback = window[functionName];\n            this.callback(container);\n        }\n    }.bind(this));\n    this.container.data('fh-add-another-initialised', true);\n    this.container.on('click', '.fh-add-another__remove-button', $.proxy(this, 'onRemoveButtonClick'));\n    this.container.on('click', '.fh-add-another__add-button', $.proxy(this, 'onAddButtonClick'));\n    this.container.find('.fh-add-another__add-button, fh-add-another__remove-button').prop('type', 'submit');\n};\nwindow.FamilyHubsFrontend.AddAnother.prototype.onAddButtonClick = function (e) {\n    var item = this.getNewItem();\n    var firstItem = this.getItems().first();\n    if (!this.hasRemoveButton(firstItem)) {\n        this.createRemoveButton(firstItem);\n    }\n    this.getItems().last().after(item);\n    item.find('input, textarea, select').first().focus();\n    e.preventDefault();\n};\nwindow.FamilyHubsFrontend.AddAnother.prototype.hasRemoveButton = function (item) {\n    return item.find('.fh-add-another__remove-button').length;\n};\nwindow.FamilyHubsFrontend.AddAnother.prototype.getItems = function () {\n    return this.container.find('.fh-add-another__item');\n};\n// todo: ? a better approach would be to have a template item that we clone,\n// rather than having to strip the error from the first item\nwindow.FamilyHubsFrontend.AddAnother.prototype.stripErrorFromNewItem = function (item) {\n    // remove the govuk-form-group--error class from any divs that have it set\n    item.querySelectorAll('div.govuk-form-group--error').forEach(function (el, index) {\n        el.classList.remove('govuk-form-group--error');\n    });\n    // find all paragraphs with the class govuk-error-message and remove them\n    item.querySelectorAll('p.govuk-error-message').forEach(function (el, index) {\n        el.parentNode.removeChild(el);\n    });\n    // remove the govuk-select--error class from any selects that have it set\n    item.querySelectorAll('select.govuk-select--error').forEach(function (el, index) {\n        el.classList.remove('govuk-select--error');\n    });\n    // remove the govuk-input--error class from any inputs that have it set\n    item.querySelectorAll('input.govuk-input--error').forEach(function (el, index) {\n        el.classList.remove('govuk-input--error');\n    });\n};\nwindow.FamilyHubsFrontend.AddAnother.prototype.getNewItem = function () {\n    // get the first item and clone it\n    const items = this.getItems();\n    const item = items[0].cloneNode(true);\n    this.stripErrorFromNewItem(item);\n    // find the autocomplete wrappers and remove the elements that are added by accessible-autocomplete\n    const autocompleteWrappers = item.querySelectorAll('.autocomplete__wrapper');\n    autocompleteWrappers.forEach(wrapper => {\n        if (wrapper.parentNode.parentNode) {\n            wrapper.parentNode.parentNode.removeChild(wrapper.parentNode);\n        }\n    });\n    var $item = $(item);\n    // update the id and name attributes\n    this.updateAttributes(++this.index, $item);\n    this.resetItem($item);\n    // call the callback which needs to apply accessibility-autocomplete enhancements to the new item\n    if (typeof this.callback === 'function') {\n        this.callback(item);\n    }\n    // Create a remove button if it doesn't exist\n    if (!this.hasRemoveButton($item)) {\n        this.createRemoveButton($item);\n    }\n    return $item;\n};\nwindow.FamilyHubsFrontend.AddAnother.prototype.updateAttributes = function (index, item) {\n    item.find('[data-name]').each(function (i, el) {\n        var originalId = el.id;\n        el.name = $(el).attr('data-name').replace(/%index%/, index);\n        el.id = $(el).attr('data-id').replace(/%index%/, index);\n        var label = $(el).siblings('label')[0] || $(el).parents('label')[0] || item.find('[for=\"' + originalId + '\"]')[0];\n        label.htmlFor = el.id;\n    });\n};\nwindow.FamilyHubsFrontend.AddAnother.prototype.createRemoveButton = function (item) {\n    item.append('<button type=\"submit\" class=\"govuk-button govuk-button--secondary fh-add-another__remove-button\">Remove</button>');\n};\nwindow.FamilyHubsFrontend.AddAnother.prototype.resetItem = function (item) {\n    // accessibile-autocomplete adds an input (without data-name or data-id)\n    // so we blank all input controls\n    item.find('input, textarea, select').each(function (index, el) {\n        if (el.type == 'checkbox' || el.type == 'radio') {\n            el.checked = false;\n        }\n        else {\n            el.value = '';\n        }\n    });\n};\nwindow.FamilyHubsFrontend.AddAnother.prototype.onRemoveButtonClick = function (e) {\n    $(e.currentTarget).parents('.fh-add-another__item').remove();\n    var items = this.getItems();\n    if (items.length === 1) {\n        items.find('.fh-add-another__remove-button').remove();\n    }\n    this.focusHeading();\n    e.preventDefault();\n};\nwindow.FamilyHubsFrontend.AddAnother.prototype.focusHeading = function () {\n    this.container.find('.fh-add-another__heading').focus();\n};\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","export function initializeAutocompletes() {\n    var autocompletes = document.querySelectorAll('[data-module=\"fh-autocomplete\"]');\n    autocompletes.forEach(function (autocomplete) {\n        accessibleAutocomplete.enhanceSelectElement({\n            selectElement: autocomplete\n        });\n    });\n}\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvYXV0b2NvbXBsZXRlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUlBLE1BQU0sVUFBVSx1QkFBdUI7SUFDbkMsSUFBSSxhQUFhLEdBQWtDLFFBQVEsQ0FBQyxnQkFBZ0IsQ0FBQyxpQ0FBaUMsQ0FBQyxDQUFDO0lBQ2hILGFBQWEsQ0FBQyxPQUFPLENBQUMsVUFBVSxZQUFZO1FBQ3hDLHNCQUFzQixDQUFDLG9CQUFvQixDQUFDO1lBQ3hDLGFBQWEsRUFBRSxZQUFZO1NBQzlCLENBQUMsQ0FBQTtJQUNOLENBQUMsQ0FBQyxDQUFDO0FBQ1AsQ0FBQyIsImZpbGUiOiJjb21wb25lbnRzL2F1dG9jb21wbGV0ZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG4vL3RvZG86IGlzIHRoZXJlIGEgLmQudHMgZm9yIGFjY2Vzc2libGUtYXV0b2NvbXBsZXRlP1xyXG5kZWNsYXJlIGNvbnN0IGFjY2Vzc2libGVBdXRvY29tcGxldGU6IGFueTtcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBpbml0aWFsaXplQXV0b2NvbXBsZXRlcygpOiB2b2lkIHtcclxuICAgIHZhciBhdXRvY29tcGxldGVzOiBOb2RlTGlzdE9mPEhUTUxTZWxlY3RFbGVtZW50PiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ1tkYXRhLW1vZHVsZT1cImZoLWF1dG9jb21wbGV0ZVwiXScpO1xyXG4gICAgYXV0b2NvbXBsZXRlcy5mb3JFYWNoKGZ1bmN0aW9uIChhdXRvY29tcGxldGUpIHtcclxuICAgICAgICBhY2Nlc3NpYmxlQXV0b2NvbXBsZXRlLmVuaGFuY2VTZWxlY3RFbGVtZW50KHtcclxuICAgICAgICAgICAgc2VsZWN0RWxlbWVudDogYXV0b2NvbXBsZXRlXHJcbiAgICAgICAgfSlcclxuICAgIH0pO1xyXG59XHJcbiJdfQ==\n","import { nodeListForEach } from './helpers';\nexport function initializeBackButtons() {\n    // Check if the page wasn't opened in a new tab or a standalone window\n    if (history.length > 1) {\n        const backLinks = document.querySelectorAll(\".fh-back-link\");\n        nodeListForEach(backLinks, (link) => {\n            link.classList.add(\"fh-back-link-visible\");\n            // set the href to the last page in the history\n            link.href = document.referrer;\n        });\n    }\n}\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvYmFjay1saW5rcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sV0FBVyxDQUFBO0FBRTNDLE1BQU0sVUFBVSxxQkFBcUI7SUFFakMsc0VBQXNFO0lBQ3RFLElBQUksT0FBTyxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUUsQ0FBQztRQUVyQixNQUFNLFNBQVMsR0FBRyxRQUFRLENBQUMsZ0JBQWdCLENBQUMsZUFBZSxDQUFDLENBQUM7UUFDN0QsZUFBZSxDQUFDLFNBQVMsRUFBRSxDQUFDLElBQXVCLEVBQUUsRUFBRTtZQUVuRCxJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDO1lBRTNDLCtDQUErQztZQUMvQyxJQUFJLENBQUMsSUFBSSxHQUFHLFFBQVEsQ0FBQyxRQUFRLENBQUM7UUFDbEMsQ0FBQyxDQUFDLENBQUM7SUFDUCxDQUFDO0FBQ0wsQ0FBQyIsImZpbGUiOiJjb21wb25lbnRzL2JhY2stbGlua3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBub2RlTGlzdEZvckVhY2ggfSBmcm9tICcuL2hlbHBlcnMnXHJcblxyXG5leHBvcnQgZnVuY3Rpb24gaW5pdGlhbGl6ZUJhY2tCdXR0b25zKCk6IHZvaWQge1xyXG5cclxuICAgIC8vIENoZWNrIGlmIHRoZSBwYWdlIHdhc24ndCBvcGVuZWQgaW4gYSBuZXcgdGFiIG9yIGEgc3RhbmRhbG9uZSB3aW5kb3dcclxuICAgIGlmIChoaXN0b3J5Lmxlbmd0aCA+IDEpIHtcclxuXHJcbiAgICAgICAgY29uc3QgYmFja0xpbmtzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5maC1iYWNrLWxpbmtcIik7XHJcbiAgICAgICAgbm9kZUxpc3RGb3JFYWNoKGJhY2tMaW5rcywgKGxpbms6IEhUTUxBbmNob3JFbGVtZW50KSA9PiB7XHJcblxyXG4gICAgICAgICAgICBsaW5rLmNsYXNzTGlzdC5hZGQoXCJmaC1iYWNrLWxpbmstdmlzaWJsZVwiKTtcclxuXHJcbiAgICAgICAgICAgIC8vIHNldCB0aGUgaHJlZiB0byB0aGUgbGFzdCBwYWdlIGluIHRoZSBoaXN0b3J5XHJcbiAgICAgICAgICAgIGxpbmsuaHJlZiA9IGRvY3VtZW50LnJlZmVycmVyO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG59Il19\n","import { nodeListForEach } from './helpers';\nexport function initializeVisibilityToggles() {\n    const visibilityToggles = document.querySelectorAll(\"[data-toggle-visibility-id]\");\n    nodeListForEach(visibilityToggles, (toggle) => {\n        toggle.addEventListener('click', function handleClick(event) {\n            let toToggleId = toggle.getAttribute(\"data-toggle-visibility-id\");\n            if (toToggleId) {\n                let toToggle = document.getElementById(toToggleId);\n                if (toToggle) {\n                    if (toToggle.style.display === \"none\") {\n                        toToggle.style.display = \"block\";\n                    }\n                    else {\n                        toToggle.style.display = \"none\";\n                    }\n                }\n            }\n        });\n    });\n}\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvdmlzaWJpbGl0eS10b2dnbGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLFdBQVcsQ0FBQTtBQUUzQyxNQUFNLFVBQVUsMkJBQTJCO0lBRXZDLE1BQU0saUJBQWlCLEdBQUcsUUFBUSxDQUFDLGdCQUFnQixDQUFDLDZCQUE2QixDQUFDLENBQUM7SUFDbkYsZUFBZSxDQUFDLGlCQUFpQixFQUM3QixDQUFDLE1BQW1CLEVBQUUsRUFBRTtRQUVwQixNQUFNLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxFQUMzQixTQUFTLFdBQVcsQ0FBQyxLQUFLO1lBRXRCLElBQUksVUFBVSxHQUFHLE1BQU0sQ0FBQyxZQUFZLENBQUMsMkJBQTJCLENBQUMsQ0FBQztZQUNsRSxJQUFJLFVBQVUsRUFBRSxDQUFDO2dCQUNiLElBQUksUUFBUSxHQUFHLFFBQVEsQ0FBQyxjQUFjLENBQUMsVUFBVSxDQUFDLENBQUM7Z0JBQ25ELElBQUksUUFBUSxFQUFFLENBQUM7b0JBQ1gsSUFBSSxRQUFRLENBQUMsS0FBSyxDQUFDLE9BQU8sS0FBSyxNQUFNLEVBQUUsQ0FBQzt3QkFDcEMsUUFBUSxDQUFDLEtBQUssQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDO29CQUNyQyxDQUFDO3lCQUFNLENBQUM7d0JBQ0osUUFBUSxDQUFDLEtBQUssQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFDO29CQUNwQyxDQUFDO2dCQUNMLENBQUM7WUFDTCxDQUFDO1FBQ0wsQ0FBQyxDQUFDLENBQUM7SUFDWCxDQUFDLENBQUMsQ0FBQztBQUNYLENBQUMiLCJmaWxlIjoiY29tcG9uZW50cy92aXNpYmlsaXR5LXRvZ2dsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG5vZGVMaXN0Rm9yRWFjaCB9IGZyb20gJy4vaGVscGVycydcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBpbml0aWFsaXplVmlzaWJpbGl0eVRvZ2dsZXMoKTogdm9pZCB7XHJcblxyXG4gICAgY29uc3QgdmlzaWJpbGl0eVRvZ2dsZXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiW2RhdGEtdG9nZ2xlLXZpc2liaWxpdHktaWRdXCIpO1xyXG4gICAgbm9kZUxpc3RGb3JFYWNoKHZpc2liaWxpdHlUb2dnbGVzLFxyXG4gICAgICAgICh0b2dnbGU6IEhUTUxFbGVtZW50KSA9PiB7XHJcblxyXG4gICAgICAgICAgICB0b2dnbGUuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLFxyXG4gICAgICAgICAgICAgICAgZnVuY3Rpb24gaGFuZGxlQ2xpY2soZXZlbnQpIHtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IHRvVG9nZ2xlSWQgPSB0b2dnbGUuZ2V0QXR0cmlidXRlKFwiZGF0YS10b2dnbGUtdmlzaWJpbGl0eS1pZFwiKTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAodG9Ub2dnbGVJZCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgdG9Ub2dnbGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0b1RvZ2dsZUlkKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRvVG9nZ2xlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodG9Ub2dnbGUuc3R5bGUuZGlzcGxheSA9PT0gXCJub25lXCIpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b1RvZ2dsZS5zdHlsZS5kaXNwbGF5ID0gXCJibG9ja1wiO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b1RvZ2dsZS5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICB9KTtcclxufSJdfQ==\n","//todo: make it a standard govuk module?\n//import { GOVUKFrontendComponent } from '../../govuk-frontend-component.mjs'\n/*todo: rename fh-open-close-target-user-opened fh-open-close-target-open-non-desktop or somesuch */\nexport class OpenCloseButton {\n    constructor(openCloseButton) {\n        //super();\n        //if (!(openCloseButton instanceof HTMLButtonElement)) {\n        //}\n        this.openCloseButton = openCloseButton;\n        const targetId = this.openCloseButton.getAttribute('data-open-close-mobile');\n        this.target = document.getElementById(targetId);\n        this.showText = this.openCloseButton.textContent;\n        this.hideText = this.openCloseButton.getAttribute('data-open-close-mobile-hide');\n        this.target.classList.add('fh-open-close-target');\n        let defaultTargetVisibility = this.openCloseButton.getAttribute('data-open-close-mobile-default');\n        if (defaultTargetVisibility === \"hide\") {\n            this.hideTarget();\n        }\n        else {\n            this.showTarget();\n        }\n        this.openCloseButton.addEventListener('click', (event) => this.handleClick(event));\n    }\n    handleClick(event) {\n        if (this.target.classList.contains('fh-open-close-target-user-opened')) {\n            this.hideTarget();\n        }\n        else {\n            this.showTarget();\n        }\n    }\n    showTarget() {\n        if (this.target) {\n            if (!this.target.classList.contains('fh-open-close-target-user-opened')) {\n                this.target.classList.add('fh-open-close-target-user-opened');\n            }\n        }\n        if (this.hideText) {\n            this.openCloseButton.textContent = this.hideText;\n        }\n    }\n    hideTarget() {\n        if (this.target) {\n            this.target.classList.remove('fh-open-close-target-user-opened');\n        }\n        if (this.showText) {\n            this.openCloseButton.textContent = this.showText;\n        }\n    }\n}\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvb3Blbi1jbG9zZS1idXR0b24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsd0NBQXdDO0FBQ3hDLDZFQUE2RTtBQUU3RSxvR0FBb0c7QUFFcEcsTUFBTSxPQUFPLGVBQWU7SUFPeEIsWUFBWSxlQUFrQztRQUMxQyxVQUFVO1FBRVYsd0RBQXdEO1FBQ3hELEdBQUc7UUFFSCxJQUFJLENBQUMsZUFBZSxHQUFHLGVBQWUsQ0FBQztRQUN2QyxNQUFNLFFBQVEsR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFDLFlBQVksQ0FBQyx3QkFBd0IsQ0FBQyxDQUFDO1FBQzdFLElBQUksQ0FBQyxNQUFNLEdBQUcsUUFBUSxDQUFDLGNBQWMsQ0FBQyxRQUFTLENBQXVCLENBQUM7UUFFdkUsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFDLFdBQVcsQ0FBQztRQUNqRCxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxlQUFlLENBQUMsWUFBWSxDQUFDLDZCQUE2QixDQUFDLENBQUM7UUFFakYsSUFBSSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLHNCQUFzQixDQUFDLENBQUM7UUFFbEQsSUFBSSx1QkFBdUIsR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFDLFlBQVksQ0FBQyxnQ0FBZ0MsQ0FBQyxDQUFDO1FBQ2xHLElBQUksdUJBQXVCLEtBQUssTUFBTSxFQUFFLENBQUM7WUFDckMsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO1FBQ3RCLENBQUM7YUFBTSxDQUFDO1lBQ0osSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO1FBQ3RCLENBQUM7UUFFRCxJQUFJLENBQUMsZUFBZSxDQUFDLGdCQUFnQixDQUFDLE9BQU8sRUFBRSxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO0lBQ3ZGLENBQUM7SUFFRCxXQUFXLENBQUMsS0FBWTtRQUNwQixJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxrQ0FBa0MsQ0FBQyxFQUFFLENBQUM7WUFDckUsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO1FBQ3RCLENBQUM7YUFBTSxDQUFDO1lBQ0osSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO1FBQ3RCLENBQUM7SUFDTCxDQUFDO0lBRUQsVUFBVTtRQUNOLElBQUksSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO1lBQ2QsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxrQ0FBa0MsQ0FBQyxFQUFFLENBQUM7Z0JBQ3RFLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxrQ0FBa0MsQ0FBQyxDQUFDO1lBQ2xFLENBQUM7UUFDTCxDQUFDO1FBQ0QsSUFBSSxJQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7WUFDaEIsSUFBSSxDQUFDLGVBQWUsQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQztRQUNyRCxDQUFDO0lBQ0wsQ0FBQztJQUNELFVBQVU7UUFDTixJQUFJLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztZQUNkLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxrQ0FBa0MsQ0FBQyxDQUFDO1FBQ3JFLENBQUM7UUFDRCxJQUFJLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztZQUNoQixJQUFJLENBQUMsZUFBZSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDO1FBQ3JELENBQUM7SUFDTCxDQUFDO0NBS0oiLCJmaWxlIjoiY29tcG9uZW50cy9vcGVuLWNsb3NlLWJ1dHRvbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vdG9kbzogbWFrZSBpdCBhIHN0YW5kYXJkIGdvdnVrIG1vZHVsZT9cclxuLy9pbXBvcnQgeyBHT1ZVS0Zyb250ZW5kQ29tcG9uZW50IH0gZnJvbSAnLi4vLi4vZ292dWstZnJvbnRlbmQtY29tcG9uZW50Lm1qcydcclxuXHJcbi8qdG9kbzogcmVuYW1lIGZoLW9wZW4tY2xvc2UtdGFyZ2V0LXVzZXItb3BlbmVkIGZoLW9wZW4tY2xvc2UtdGFyZ2V0LW9wZW4tbm9uLWRlc2t0b3Agb3Igc29tZXN1Y2ggKi9cclxuXHJcbmV4cG9ydCBjbGFzcyBPcGVuQ2xvc2VCdXR0b24geyAvLyBleHRlbmRzIEdPVlVLRnJvbnRlbmRDb21wb25lbnQge1xyXG5cclxuICAgIG9wZW5DbG9zZUJ1dHRvbjogSFRNTEJ1dHRvbkVsZW1lbnQ7XHJcbiAgICB0YXJnZXQ6IEhUTUxFbGVtZW50IHwgbnVsbDtcclxuICAgIHNob3dUZXh0OiBzdHJpbmcgfCBudWxsO1xyXG4gICAgaGlkZVRleHQ6IHN0cmluZyB8IG51bGw7XHJcblxyXG4gICAgY29uc3RydWN0b3Iob3BlbkNsb3NlQnV0dG9uOiBIVE1MQnV0dG9uRWxlbWVudCkge1xyXG4gICAgICAgIC8vc3VwZXIoKTtcclxuXHJcbiAgICAgICAgLy9pZiAoIShvcGVuQ2xvc2VCdXR0b24gaW5zdGFuY2VvZiBIVE1MQnV0dG9uRWxlbWVudCkpIHtcclxuICAgICAgICAvL31cclxuXHJcbiAgICAgICAgdGhpcy5vcGVuQ2xvc2VCdXR0b24gPSBvcGVuQ2xvc2VCdXR0b247XHJcbiAgICAgICAgY29uc3QgdGFyZ2V0SWQgPSB0aGlzLm9wZW5DbG9zZUJ1dHRvbi5nZXRBdHRyaWJ1dGUoJ2RhdGEtb3Blbi1jbG9zZS1tb2JpbGUnKTtcclxuICAgICAgICB0aGlzLnRhcmdldCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHRhcmdldElkISkgYXMgSFRNTEVsZW1lbnQgfCBudWxsO1xyXG5cclxuICAgICAgICB0aGlzLnNob3dUZXh0ID0gdGhpcy5vcGVuQ2xvc2VCdXR0b24udGV4dENvbnRlbnQ7XHJcbiAgICAgICAgdGhpcy5oaWRlVGV4dCA9IHRoaXMub3BlbkNsb3NlQnV0dG9uLmdldEF0dHJpYnV0ZSgnZGF0YS1vcGVuLWNsb3NlLW1vYmlsZS1oaWRlJyk7XHJcblxyXG4gICAgICAgIHRoaXMudGFyZ2V0LmNsYXNzTGlzdC5hZGQoJ2ZoLW9wZW4tY2xvc2UtdGFyZ2V0Jyk7XHJcblxyXG4gICAgICAgIGxldCBkZWZhdWx0VGFyZ2V0VmlzaWJpbGl0eSA9IHRoaXMub3BlbkNsb3NlQnV0dG9uLmdldEF0dHJpYnV0ZSgnZGF0YS1vcGVuLWNsb3NlLW1vYmlsZS1kZWZhdWx0Jyk7XHJcbiAgICAgICAgaWYgKGRlZmF1bHRUYXJnZXRWaXNpYmlsaXR5ID09PSBcImhpZGVcIikge1xyXG4gICAgICAgICAgICB0aGlzLmhpZGVUYXJnZXQoKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLnNob3dUYXJnZXQoKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHRoaXMub3BlbkNsb3NlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGV2ZW50KSA9PiB0aGlzLmhhbmRsZUNsaWNrKGV2ZW50KSk7XHJcbiAgICB9XHJcblxyXG4gICAgaGFuZGxlQ2xpY2soZXZlbnQ6IEV2ZW50KSB7XHJcbiAgICAgICAgaWYgKHRoaXMudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygnZmgtb3Blbi1jbG9zZS10YXJnZXQtdXNlci1vcGVuZWQnKSkge1xyXG4gICAgICAgICAgICB0aGlzLmhpZGVUYXJnZXQoKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLnNob3dUYXJnZXQoKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgc2hvd1RhcmdldCgpIHtcclxuICAgICAgICBpZiAodGhpcy50YXJnZXQpIHtcclxuICAgICAgICAgICAgaWYgKCF0aGlzLnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoJ2ZoLW9wZW4tY2xvc2UtdGFyZ2V0LXVzZXItb3BlbmVkJykpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMudGFyZ2V0LmNsYXNzTGlzdC5hZGQoJ2ZoLW9wZW4tY2xvc2UtdGFyZ2V0LXVzZXItb3BlbmVkJyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHRoaXMuaGlkZVRleHQpIHtcclxuICAgICAgICAgICAgdGhpcy5vcGVuQ2xvc2VCdXR0b24udGV4dENvbnRlbnQgPSB0aGlzLmhpZGVUZXh0O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGhpZGVUYXJnZXQoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMudGFyZ2V0KSB7XHJcbiAgICAgICAgICAgIHRoaXMudGFyZ2V0LmNsYXNzTGlzdC5yZW1vdmUoJ2ZoLW9wZW4tY2xvc2UtdGFyZ2V0LXVzZXItb3BlbmVkJyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICh0aGlzLnNob3dUZXh0KSB7XHJcbiAgICAgICAgICAgIHRoaXMub3BlbkNsb3NlQnV0dG9uLnRleHRDb250ZW50ID0gdGhpcy5zaG93VGV4dDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIE5hbWUgZm9yIHRoZSBjb21wb25lbnQgdXNlZCB3aGVuIGluaXRpYWxpc2luZyB1c2luZyBkYXRhLW1vZHVsZSBhdHRyaWJ1dGVzLlxyXG4gICAgICovXHJcbi8qICAgIHN0YXRpYyBtb2R1bGVOYW1lID0gJ29wZW4tY2xvc2UtYnV0dG9uJzsqL1xyXG59XHJcbiJdfQ==\n","// js components were originally snaffled from https://github.com/alphagov/govuk-design-system/blob/main/src/javascripts/components/\nimport CookieBanner from './components/cookie-banner';\nimport CookiesPage from './components/cookies-page';\nimport initAnalytics from './components/analytics';\nimport initClarity from './components/clarity';\nimport { initializeAddAnother } from './components/add-another';\nimport { initializeAutocompletes } from './components/autocomplete';\nimport { initializeBackButtons } from './components/back-links';\nimport { initializeVisibilityToggles } from './components/visibility-toggle';\nimport { OpenCloseButton } from './components/open-close-button';\n//todo: consistency in module/proto/class style\nwindow.FamilyHubsFrontend = window.FamilyHubsFrontend || {};\nwindow.FamilyHubsFrontend.initAll = () => {\n    // Initialise cookie banner\n    const $cookieBanner = document.querySelector('[data-module=\"govuk-cookie-banner\"]');\n    new CookieBanner($cookieBanner).init();\n    initAnalytics(window.GA_MEASUREMENT_ID);\n    initClarity(window.CLARITY_ID);\n    //todo: move this into scripts section on cookie page\n    // Initialise cookie page\n    var $cookiesPage = document.querySelector('[data-module=\"fh-cookies-page\"]');\n    new CookiesPage($cookiesPage).init();\n    initializeBackButtons();\n    initializeVisibilityToggles();\n    //todo: ordering between these two?\n    initializeAddAnother();\n    initializeAutocompletes();\n    // initialise open close buttons\n    let openCloseButtons = document.querySelectorAll('button[data-open-close-mobile]');\n    openCloseButtons === null || openCloseButtons === void 0 ? void 0 : openCloseButtons.forEach((openCloseButton) => {\n        new OpenCloseButton(openCloseButton);\n    });\n};\n//todo: do we want to do this...\n//document.addEventListener(\"DOMContentLoaded\", function () {\nwindow.GOVUKFrontend.initAll();\nwindow.MOJFrontend.initAll();\nwindow.FamilyHubsFrontend.initAll();\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZhbWlseWh1YnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0lBQW9JO0FBc0JwSSxPQUFPLFlBQVksTUFBTSw0QkFBNEIsQ0FBQTtBQUNyRCxPQUFPLFdBQVcsTUFBTSwyQkFBMkIsQ0FBQTtBQUNuRCxPQUFPLGFBQWEsTUFBTSx3QkFBd0IsQ0FBQztBQUNuRCxPQUFPLFdBQVcsTUFBTSxzQkFBc0IsQ0FBQztBQUMvQyxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUNoRSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUNwRSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUNoRSxPQUFPLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUM3RSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFFakUsK0NBQStDO0FBRS9DLE1BQU0sQ0FBQyxrQkFBa0IsR0FBRyxNQUFNLENBQUMsa0JBQWtCLElBQUksRUFBRSxDQUFDO0FBQzVELE1BQU0sQ0FBQyxrQkFBa0IsQ0FBQyxPQUFPLEdBQUcsR0FBRyxFQUFFO0lBRXJDLDJCQUEyQjtJQUMzQixNQUFNLGFBQWEsR0FBRyxRQUFRLENBQUMsYUFBYSxDQUFDLHFDQUFxQyxDQUF1QixDQUFDO0lBQzFHLElBQUksWUFBWSxDQUFDLGFBQWEsQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFDO0lBRXZDLGFBQWEsQ0FBQyxNQUFNLENBQUMsaUJBQWlCLENBQUMsQ0FBQztJQUN4QyxXQUFXLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBRS9CLHFEQUFxRDtJQUNyRCx5QkFBeUI7SUFDekIsSUFBSSxZQUFZLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxpQ0FBaUMsQ0FBQyxDQUFDO0lBQzdFLElBQUksV0FBVyxDQUFDLFlBQVksQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFDO0lBRXJDLHFCQUFxQixFQUFFLENBQUM7SUFDeEIsMkJBQTJCLEVBQUUsQ0FBQztJQUM5QixtQ0FBbUM7SUFDbkMsb0JBQW9CLEVBQUUsQ0FBQztJQUN2Qix1QkFBdUIsRUFBRSxDQUFDO0lBRTFCLGdDQUFnQztJQUNoQyxJQUFJLGdCQUFnQixHQUFrQyxRQUFRLENBQUMsZ0JBQWdCLENBQUMsZ0NBQWdDLENBQUMsQ0FBQztJQUNsSCxnQkFBZ0IsYUFBaEIsZ0JBQWdCLHVCQUFoQixnQkFBZ0IsQ0FBRSxPQUFPLENBQUMsQ0FBQyxlQUFlLEVBQUUsRUFBRTtRQUMxQyxJQUFJLGVBQWUsQ0FBQyxlQUFlLENBQUMsQ0FBQztJQUN6QyxDQUFDLENBQUMsQ0FBQztBQUNQLENBQUMsQ0FBQztBQUVGLGdDQUFnQztBQUNoQyw2REFBNkQ7QUFFN0QsTUFBTSxDQUFDLGFBQWEsQ0FBQyxPQUFPLEVBQUUsQ0FBQztBQUMvQixNQUFNLENBQUMsV0FBVyxDQUFDLE9BQU8sRUFBRSxDQUFDO0FBQzdCLE1BQU0sQ0FBQyxrQkFBa0IsQ0FBQyxPQUFPLEVBQUUsQ0FBQyIsImZpbGUiOiJmYW1pbHlodWJzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8ganMgY29tcG9uZW50cyB3ZXJlIG9yaWdpbmFsbHkgc25hZmZsZWQgZnJvbSBodHRwczovL2dpdGh1Yi5jb20vYWxwaGFnb3YvZ292dWstZGVzaWduLXN5c3RlbS9ibG9iL21haW4vc3JjL2phdmFzY3JpcHRzL2NvbXBvbmVudHMvXHJcblxyXG4vL3RvZG86IHN3YXAgdG8gYSBjb21wb25lbnRzIGZvbGRlcj9cclxuXHJcbmRlY2xhcmUgZ2xvYmFsIHtcclxuICAgIGludGVyZmFjZSBXaW5kb3cge1xyXG4gICAgICAgIEdEU19DT05TRU5UX0NPT0tJRV9WRVJTSU9OOiBudW1iZXI7XHJcbiAgICAgICAgR0FfTUVBU1VSRU1FTlRfSUQ6IHN0cmluZztcclxuICAgICAgICBHQV9DT05UQUlORVJfSUQ6IHN0cmluZztcclxuICAgICAgICBHQV9DT09LSUVfTkFNRTogc3RyaW5nO1xyXG4gICAgICAgIENMQVJJVFlfSUQ6IHN0cmluZztcclxuICAgICAgICBkYXRhTGF5ZXI6IGFueVtdO1xyXG4gICAgICAgIEZhbWlseUh1YnNGcm9udGVuZDogYW55O1xyXG4gICAgICAgIEdPVlVLRnJvbnRlbmQ6IHtcclxuICAgICAgICAgICAgaW5pdEFsbDogKCkgPT4gdm9pZDtcclxuICAgICAgICB9XHJcbiAgICAgICAgTU9KRnJvbnRlbmQ6IHtcclxuICAgICAgICAgICAgaW5pdEFsbDogKCkgPT4gdm9pZDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbmltcG9ydCBDb29raWVCYW5uZXIgZnJvbSAnLi9jb21wb25lbnRzL2Nvb2tpZS1iYW5uZXInXHJcbmltcG9ydCBDb29raWVzUGFnZSBmcm9tICcuL2NvbXBvbmVudHMvY29va2llcy1wYWdlJ1xyXG5pbXBvcnQgaW5pdEFuYWx5dGljcyBmcm9tICcuL2NvbXBvbmVudHMvYW5hbHl0aWNzJztcclxuaW1wb3J0IGluaXRDbGFyaXR5IGZyb20gJy4vY29tcG9uZW50cy9jbGFyaXR5JztcclxuaW1wb3J0IHsgaW5pdGlhbGl6ZUFkZEFub3RoZXIgfSBmcm9tICcuL2NvbXBvbmVudHMvYWRkLWFub3RoZXInO1xyXG5pbXBvcnQgeyBpbml0aWFsaXplQXV0b2NvbXBsZXRlcyB9IGZyb20gJy4vY29tcG9uZW50cy9hdXRvY29tcGxldGUnO1xyXG5pbXBvcnQgeyBpbml0aWFsaXplQmFja0J1dHRvbnMgfSBmcm9tICcuL2NvbXBvbmVudHMvYmFjay1saW5rcyc7XHJcbmltcG9ydCB7IGluaXRpYWxpemVWaXNpYmlsaXR5VG9nZ2xlcyB9IGZyb20gJy4vY29tcG9uZW50cy92aXNpYmlsaXR5LXRvZ2dsZSc7XHJcbmltcG9ydCB7IE9wZW5DbG9zZUJ1dHRvbiB9IGZyb20gJy4vY29tcG9uZW50cy9vcGVuLWNsb3NlLWJ1dHRvbic7XHJcblxyXG4vL3RvZG86IGNvbnNpc3RlbmN5IGluIG1vZHVsZS9wcm90by9jbGFzcyBzdHlsZVxyXG5cclxud2luZG93LkZhbWlseUh1YnNGcm9udGVuZCA9IHdpbmRvdy5GYW1pbHlIdWJzRnJvbnRlbmQgfHwge307XHJcbndpbmRvdy5GYW1pbHlIdWJzRnJvbnRlbmQuaW5pdEFsbCA9ICgpID0+IHtcclxuXHJcbiAgICAvLyBJbml0aWFsaXNlIGNvb2tpZSBiYW5uZXJcclxuICAgIGNvbnN0ICRjb29raWVCYW5uZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdbZGF0YS1tb2R1bGU9XCJnb3Z1ay1jb29raWUtYmFubmVyXCJdJykgYXMgSFRNTEVsZW1lbnQgfCBudWxsO1xyXG4gICAgbmV3IENvb2tpZUJhbm5lcigkY29va2llQmFubmVyKS5pbml0KCk7XHJcblxyXG4gICAgaW5pdEFuYWx5dGljcyh3aW5kb3cuR0FfTUVBU1VSRU1FTlRfSUQpO1xyXG4gICAgaW5pdENsYXJpdHkod2luZG93LkNMQVJJVFlfSUQpO1xyXG5cclxuICAgIC8vdG9kbzogbW92ZSB0aGlzIGludG8gc2NyaXB0cyBzZWN0aW9uIG9uIGNvb2tpZSBwYWdlXHJcbiAgICAvLyBJbml0aWFsaXNlIGNvb2tpZSBwYWdlXHJcbiAgICB2YXIgJGNvb2tpZXNQYWdlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtbW9kdWxlPVwiZmgtY29va2llcy1wYWdlXCJdJyk7XHJcbiAgICBuZXcgQ29va2llc1BhZ2UoJGNvb2tpZXNQYWdlKS5pbml0KCk7XHJcblxyXG4gICAgaW5pdGlhbGl6ZUJhY2tCdXR0b25zKCk7XHJcbiAgICBpbml0aWFsaXplVmlzaWJpbGl0eVRvZ2dsZXMoKTtcclxuICAgIC8vdG9kbzogb3JkZXJpbmcgYmV0d2VlbiB0aGVzZSB0d28/XHJcbiAgICBpbml0aWFsaXplQWRkQW5vdGhlcigpO1xyXG4gICAgaW5pdGlhbGl6ZUF1dG9jb21wbGV0ZXMoKTtcclxuXHJcbiAgICAvLyBpbml0aWFsaXNlIG9wZW4gY2xvc2UgYnV0dG9uc1xyXG4gICAgbGV0IG9wZW5DbG9zZUJ1dHRvbnM6IE5vZGVMaXN0T2Y8SFRNTEJ1dHRvbkVsZW1lbnQ+ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnYnV0dG9uW2RhdGEtb3Blbi1jbG9zZS1tb2JpbGVdJyk7XHJcbiAgICBvcGVuQ2xvc2VCdXR0b25zPy5mb3JFYWNoKChvcGVuQ2xvc2VCdXR0b24pID0+IHtcclxuICAgICAgICBuZXcgT3BlbkNsb3NlQnV0dG9uKG9wZW5DbG9zZUJ1dHRvbik7XHJcbiAgICB9KTtcclxufTtcclxuXHJcbi8vdG9kbzogZG8gd2Ugd2FudCB0byBkbyB0aGlzLi4uXHJcbi8vZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIiwgZnVuY3Rpb24gKCkge1xyXG5cclxud2luZG93LkdPVlVLRnJvbnRlbmQuaW5pdEFsbCgpO1xyXG53aW5kb3cuTU9KRnJvbnRlbmQuaW5pdEFsbCgpO1xyXG53aW5kb3cuRmFtaWx5SHVic0Zyb250ZW5kLmluaXRBbGwoKTtcclxuIl19\n"]}